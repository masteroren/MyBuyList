#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyBuyList.Shared.Entities
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Runtime.Serialization;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MyBuyList")]
	internal sealed partial class MyBuyListDBContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertShopDepartment(ShopDepartment instance);
    partial void UpdateShopDepartment(ShopDepartment instance);
    partial void DeleteShopDepartment(ShopDepartment instance);
    partial void InsertUserFavoriteRecipe(UserFavoriteRecipe instance);
    partial void UpdateUserFavoriteRecipe(UserFavoriteRecipe instance);
    partial void DeleteUserFavoriteRecipe(UserFavoriteRecipe instance);
    partial void InsertMenuRecipe(MenuRecipe instance);
    partial void UpdateMenuRecipe(MenuRecipe instance);
    partial void DeleteMenuRecipe(MenuRecipe instance);
    partial void InsertMenuType(MenuType instance);
    partial void UpdateMenuType(MenuType instance);
    partial void DeleteMenuType(MenuType instance);
    partial void InsertMealRecipe(MealRecipe instance);
    partial void UpdateMealRecipe(MealRecipe instance);
    partial void DeleteMealRecipe(MealRecipe instance);
    partial void InsertMealType(MealType instance);
    partial void UpdateMealType(MealType instance);
    partial void DeleteMealType(MealType instance);
    partial void InsertCourseType(CourseType instance);
    partial void UpdateCourseType(CourseType instance);
    partial void DeleteCourseType(CourseType instance);
    partial void InsertCategory(Category instance);
    partial void UpdateCategory(Category instance);
    partial void DeleteCategory(Category instance);
    partial void InsertRecipeCategory(RecipeCategory instance);
    partial void UpdateRecipeCategory(RecipeCategory instance);
    partial void DeleteRecipeCategory(RecipeCategory instance);
    partial void InsertFoodCategory(FoodCategory instance);
    partial void UpdateFoodCategory(FoodCategory instance);
    partial void DeleteFoodCategory(FoodCategory instance);
    partial void InsertGeneralItem(GeneralItem instance);
    partial void UpdateGeneralItem(GeneralItem instance);
    partial void DeleteGeneralItem(GeneralItem instance);
    partial void InsertShoppingListAdditionalItem(ShoppingListAdditionalItem instance);
    partial void UpdateShoppingListAdditionalItem(ShoppingListAdditionalItem instance);
    partial void DeleteShoppingListAdditionalItem(ShoppingListAdditionalItem instance);
    partial void InsertUserType(UserType instance);
    partial void UpdateUserType(UserType instance);
    partial void DeleteUserType(UserType instance);
    partial void InsertNutCategory(NutCategory instance);
    partial void UpdateNutCategory(NutCategory instance);
    partial void DeleteNutCategory(NutCategory instance);
    partial void InsertNutItem(NutItem instance);
    partial void UpdateNutItem(NutItem instance);
    partial void DeleteNutItem(NutItem instance);
    partial void InsertMBLSetting(MBLSetting instance);
    partial void UpdateMBLSetting(MBLSetting instance);
    partial void DeleteMBLSetting(MBLSetting instance);
    partial void InsertMCategory(MCategory instance);
    partial void UpdateMCategory(MCategory instance);
    partial void DeleteMCategory(MCategory instance);
    partial void InsertMenuCategory(MenuCategory instance);
    partial void UpdateMenuCategory(MenuCategory instance);
    partial void DeleteMenuCategory(MenuCategory instance);
    partial void InsertArticle(Article instance);
    partial void UpdateArticle(Article instance);
    partial void DeleteArticle(Article instance);
    partial void InsertRecipe(Recipe instance);
    partial void UpdateRecipe(Recipe instance);
    partial void DeleteRecipe(Recipe instance);
    partial void InsertMenu(Menu instance);
    partial void UpdateMenu(Menu instance);
    partial void DeleteMenu(Menu instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserFavoriteMenu(UserFavoriteMenu instance);
    partial void UpdateUserFavoriteMenu(UserFavoriteMenu instance);
    partial void DeleteUserFavoriteMenu(UserFavoriteMenu instance);
    partial void InsertMeal(Meal instance);
    partial void UpdateMeal(Meal instance);
    partial void DeleteMeal(Meal instance);
    partial void InsertGeneralList(GeneralList instance);
    partial void UpdateGeneralList(GeneralList instance);
    partial void DeleteGeneralList(GeneralList instance);
    partial void InsertGeneralListDetail(GeneralListDetail instance);
    partial void UpdateGeneralListDetail(GeneralListDetail instance);
    partial void DeleteGeneralListDetail(GeneralListDetail instance);
    partial void InsertSummeryList(SummeryList instance);
    partial void UpdateSummeryList(SummeryList instance);
    partial void DeleteSummeryList(SummeryList instance);
    partial void InsertSummeryListDetail(SummeryListDetail instance);
    partial void UpdateSummeryListDetail(SummeryListDetail instance);
    partial void DeleteSummeryListDetail(SummeryListDetail instance);
    partial void InsertSummerySource(SummerySource instance);
    partial void UpdateSummerySource(SummerySource instance);
    partial void DeleteSummerySource(SummerySource instance);
    partial void InsertRecipesInShoppingList(RecipesInShoppingList instance);
    partial void UpdateRecipesInShoppingList(RecipesInShoppingList instance);
    partial void DeleteRecipesInShoppingList(RecipesInShoppingList instance);
    partial void InsertFood(Food instance);
    partial void UpdateFood(Food instance);
    partial void DeleteFood(Food instance);
    partial void InsertNutValue(NutValue instance);
    partial void UpdateNutValue(NutValue instance);
    partial void DeleteNutValue(NutValue instance);
    partial void InsertMissingListDetail(MissingListDetail instance);
    partial void UpdateMissingListDetail(MissingListDetail instance);
    partial void DeleteMissingListDetail(MissingListDetail instance);
    partial void InsertMenusInShoppingList(MenusInShoppingList instance);
    partial void UpdateMenusInShoppingList(MenusInShoppingList instance);
    partial void DeleteMenusInShoppingList(MenusInShoppingList instance);
    partial void InsertSavedList(SavedList instance);
    partial void UpdateSavedList(SavedList instance);
    partial void DeleteSavedList(SavedList instance);
    partial void InsertSavedListDetail(SavedListDetail instance);
    partial void UpdateSavedListDetail(SavedListDetail instance);
    partial void DeleteSavedListDetail(SavedListDetail instance);
    partial void InsertIngredient(Ingredient instance);
    partial void UpdateIngredient(Ingredient instance);
    partial void DeleteIngredient(Ingredient instance);
    partial void InsertMeasurementUnitsConvert(MeasurementUnitsConvert instance);
    partial void UpdateMeasurementUnitsConvert(MeasurementUnitsConvert instance);
    partial void DeleteMeasurementUnitsConvert(MeasurementUnitsConvert instance);
    partial void InsertMissingList(MissingList instance);
    partial void UpdateMissingList(MissingList instance);
    partial void DeleteMissingList(MissingList instance);
    partial void InsertMeasurementUnit(MeasurementUnit instance);
    partial void UpdateMeasurementUnit(MeasurementUnit instance);
    partial void DeleteMeasurementUnit(MeasurementUnit instance);
    partial void InsertUserShoppingList(UserShoppingList instance);
    partial void UpdateUserShoppingList(UserShoppingList instance);
    partial void DeleteUserShoppingList(UserShoppingList instance);
    #endregion
		
		public MyBuyListDBContext() : 
				base("Data Source=.\\sqlexpress;Initial Catalog=MyBuyList;Integrated Security=False;User" +
						" ID=sa;Password=123456", mappingSource)
		{
			OnCreated();
		}
		
		public MyBuyListDBContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyBuyListDBContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyBuyListDBContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyBuyListDBContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ShopDepartment> ShopDepartments
		{
			get
			{
				return this.GetTable<ShopDepartment>();
			}
		}
		
		public System.Data.Linq.Table<UserFavoriteRecipe> UserFavoriteRecipes
		{
			get
			{
				return this.GetTable<UserFavoriteRecipe>();
			}
		}
		
		public System.Data.Linq.Table<MenuRecipe> MenuRecipes
		{
			get
			{
				return this.GetTable<MenuRecipe>();
			}
		}
		
		public System.Data.Linq.Table<MenuType> MenuTypes
		{
			get
			{
				return this.GetTable<MenuType>();
			}
		}
		
		public System.Data.Linq.Table<MealRecipe> MealRecipes
		{
			get
			{
				return this.GetTable<MealRecipe>();
			}
		}
		
		public System.Data.Linq.Table<MealType> MealTypes
		{
			get
			{
				return this.GetTable<MealType>();
			}
		}
		
		public System.Data.Linq.Table<CourseType> CourseTypes
		{
			get
			{
				return this.GetTable<CourseType>();
			}
		}
		
		public System.Data.Linq.Table<Category> Categories
		{
			get
			{
				return this.GetTable<Category>();
			}
		}
		
		public System.Data.Linq.Table<RecipeCategory> RecipeCategories
		{
			get
			{
				return this.GetTable<RecipeCategory>();
			}
		}
		
		public System.Data.Linq.Table<RecipeIngredientsView> RecipeIngredientsViews
		{
			get
			{
				return this.GetTable<RecipeIngredientsView>();
			}
		}
		
		public System.Data.Linq.Table<FoodCategory> FoodCategories
		{
			get
			{
				return this.GetTable<FoodCategory>();
			}
		}
		
		public System.Data.Linq.Table<GeneralItem> GeneralItems
		{
			get
			{
				return this.GetTable<GeneralItem>();
			}
		}
		
		public System.Data.Linq.Table<ShoppingListAdditionalItem> ShoppingListAdditionalItems
		{
			get
			{
				return this.GetTable<ShoppingListAdditionalItem>();
			}
		}
		
		public System.Data.Linq.Table<UserType> UserTypes
		{
			get
			{
				return this.GetTable<UserType>();
			}
		}
		
		public System.Data.Linq.Table<NutCategory> NutCategories
		{
			get
			{
				return this.GetTable<NutCategory>();
			}
		}
		
		public System.Data.Linq.Table<NutItem> NutItems
		{
			get
			{
				return this.GetTable<NutItem>();
			}
		}
		
		public System.Data.Linq.Table<MBLSetting> MBLSettings
		{
			get
			{
				return this.GetTable<MBLSetting>();
			}
		}
		
		public System.Data.Linq.Table<MCategory> MCategories
		{
			get
			{
				return this.GetTable<MCategory>();
			}
		}
		
		public System.Data.Linq.Table<MenuCategory> MenuCategories
		{
			get
			{
				return this.GetTable<MenuCategory>();
			}
		}
		
		public System.Data.Linq.Table<Article> Articles
		{
			get
			{
				return this.GetTable<Article>();
			}
		}
		
		public System.Data.Linq.Table<Recipe> Recipes
		{
			get
			{
				return this.GetTable<Recipe>();
			}
		}
		
		public System.Data.Linq.Table<Menu> Menus
		{
			get
			{
				return this.GetTable<Menu>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserFavoriteMenu> UserFavoriteMenus
		{
			get
			{
				return this.GetTable<UserFavoriteMenu>();
			}
		}
		
		public System.Data.Linq.Table<Meal> Meals
		{
			get
			{
				return this.GetTable<Meal>();
			}
		}
		
		public System.Data.Linq.Table<GeneralList> GeneralLists
		{
			get
			{
				return this.GetTable<GeneralList>();
			}
		}
		
		public System.Data.Linq.Table<GeneralListReciep> GeneralListRecieps
		{
			get
			{
				return this.GetTable<GeneralListReciep>();
			}
		}
		
		public System.Data.Linq.Table<GeneralListDetail> GeneralListDetails
		{
			get
			{
				return this.GetTable<GeneralListDetail>();
			}
		}
		
		public System.Data.Linq.Table<SummeryList> SummeryLists
		{
			get
			{
				return this.GetTable<SummeryList>();
			}
		}
		
		public System.Data.Linq.Table<SummeryListDetail> SummeryListDetails
		{
			get
			{
				return this.GetTable<SummeryListDetail>();
			}
		}
		
		public System.Data.Linq.Table<SummerySource> SummerySources
		{
			get
			{
				return this.GetTable<SummerySource>();
			}
		}
		
		public System.Data.Linq.Table<RecipesView> RecipesViews
		{
			get
			{
				return this.GetTable<RecipesView>();
			}
		}
		
		public System.Data.Linq.Table<RecipesInShoppingList> RecipesInShoppingLists
		{
			get
			{
				return this.GetTable<RecipesInShoppingList>();
			}
		}
		
		public System.Data.Linq.Table<Food> Foods
		{
			get
			{
				return this.GetTable<Food>();
			}
		}
		
		public System.Data.Linq.Table<NutValue> NutValues
		{
			get
			{
				return this.GetTable<NutValue>();
			}
		}
		
		public System.Data.Linq.Table<MissingListDetail> MissingListDetails
		{
			get
			{
				return this.GetTable<MissingListDetail>();
			}
		}
		
		public System.Data.Linq.Table<MenusInShoppingList> MenusInShoppingLists
		{
			get
			{
				return this.GetTable<MenusInShoppingList>();
			}
		}
		
		public System.Data.Linq.Table<SavedList> SavedLists
		{
			get
			{
				return this.GetTable<SavedList>();
			}
		}
		
		public System.Data.Linq.Table<SavedListDetail> SavedListDetails
		{
			get
			{
				return this.GetTable<SavedListDetail>();
			}
		}
		
		public System.Data.Linq.Table<Ingredient> Ingredients
		{
			get
			{
				return this.GetTable<Ingredient>();
			}
		}
		
		public System.Data.Linq.Table<MeasurementUnitsConvert> MeasurementUnitsConverts
		{
			get
			{
				return this.GetTable<MeasurementUnitsConvert>();
			}
		}
		
		public System.Data.Linq.Table<MissingList> MissingLists
		{
			get
			{
				return this.GetTable<MissingList>();
			}
		}
		
		public System.Data.Linq.Table<MeasurementUnit> MeasurementUnits
		{
			get
			{
				return this.GetTable<MeasurementUnit>();
			}
		}
		
		public System.Data.Linq.Table<UserShoppingList> UserShoppingLists
		{
			get
			{
				return this.GetTable<UserShoppingList>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShopDepartments")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ShopDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShopDepartmentId;
		
		private string _ShopDepartmentName;
		
		private int _SortOrder;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<FoodCategory> _FoodCategories;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShopDepartmentIdChanging(int value);
    partial void OnShopDepartmentIdChanged();
    partial void OnShopDepartmentNameChanging(string value);
    partial void OnShopDepartmentNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public ShopDepartment()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopDepartmentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ShopDepartmentId
		{
			get
			{
				return this._ShopDepartmentId;
			}
			set
			{
				if ((this._ShopDepartmentId != value))
				{
					this.OnShopDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShopDepartmentId = value;
					this.SendPropertyChanged("ShopDepartmentId");
					this.OnShopDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopDepartmentName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string ShopDepartmentName
		{
			get
			{
				return this._ShopDepartmentName;
			}
			set
			{
				if ((this._ShopDepartmentName != value))
				{
					this.OnShopDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._ShopDepartmentName = value;
					this.SendPropertyChanged("ShopDepartmentName");
					this.OnShopDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopDepartment_FoodCategory", Storage="_FoodCategories", ThisKey="ShopDepartmentId", OtherKey="ShopDepartmentId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<FoodCategory> FoodCategories
		{
			get
			{
				if ((this.serializing 
							&& (this._FoodCategories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._FoodCategories;
			}
			set
			{
				this._FoodCategories.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FoodCategories(FoodCategory entity)
		{
			this.SendPropertyChanging();
			entity.ShopDepartment = this;
		}
		
		private void detach_FoodCategories(FoodCategory entity)
		{
			this.SendPropertyChanging();
			entity.ShopDepartment = null;
		}
		
		private void Initialize()
		{
			this._FoodCategories = new EntitySet<FoodCategory>(new Action<FoodCategory>(this.attach_FoodCategories), new Action<FoodCategory>(this.detach_FoodCategories));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserFavoriteRecipes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserFavoriteRecipe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _RecipeId;
		
		private EntityRef<Recipe> _Recipe;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnRecipeIdChanging(int value);
    partial void OnRecipeIdChanged();
    #endregion
		
		public UserFavoriteRecipe()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int RecipeId
		{
			get
			{
				return this._RecipeId;
			}
			set
			{
				if ((this._RecipeId != value))
				{
					if (this._Recipe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecipeIdChanging(value);
					this.SendPropertyChanging();
					this._RecipeId = value;
					this.SendPropertyChanged("RecipeId");
					this.OnRecipeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recipe_UserFavoriteRecipe", Storage="_Recipe", ThisKey="RecipeId", OtherKey="RecipeId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Recipe Recipe
		{
			get
			{
				return this._Recipe.Entity;
			}
			set
			{
				Recipe previousValue = this._Recipe.Entity;
				if (((previousValue != value) 
							|| (this._Recipe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Recipe.Entity = null;
						previousValue.UserFavoriteRecipes.Remove(this);
					}
					this._Recipe.Entity = value;
					if ((value != null))
					{
						value.UserFavoriteRecipes.Add(this);
						this._RecipeId = value.RecipeId;
					}
					else
					{
						this._RecipeId = default(int);
					}
					this.SendPropertyChanged("Recipe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserFavoriteRecipe", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserFavoriteRecipes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserFavoriteRecipes.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Recipe = default(EntityRef<Recipe>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenuRecipes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MenuRecipe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MenuId;
		
		private int _RecipeId;
		
		private EntityRef<Recipe> _Recipe;
		
		private EntityRef<Menu> _Menus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIdChanging(int value);
    partial void OnMenuIdChanged();
    partial void OnRecipeIdChanging(int value);
    partial void OnRecipeIdChanged();
    #endregion
		
		public MenuRecipe()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Menus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int RecipeId
		{
			get
			{
				return this._RecipeId;
			}
			set
			{
				if ((this._RecipeId != value))
				{
					if (this._Recipe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecipeIdChanging(value);
					this.SendPropertyChanging();
					this._RecipeId = value;
					this.SendPropertyChanged("RecipeId");
					this.OnRecipeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recipe_MenuRecipe", Storage="_Recipe", ThisKey="RecipeId", OtherKey="RecipeId", IsForeignKey=true)]
		public Recipe Recipe
		{
			get
			{
				return this._Recipe.Entity;
			}
			set
			{
				Recipe previousValue = this._Recipe.Entity;
				if (((previousValue != value) 
							|| (this._Recipe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Recipe.Entity = null;
						previousValue.MenuRecipes.Remove(this);
					}
					this._Recipe.Entity = value;
					if ((value != null))
					{
						value.MenuRecipes.Add(this);
						this._RecipeId = value.RecipeId;
					}
					else
					{
						this._RecipeId = default(int);
					}
					this.SendPropertyChanged("Recipe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_MenuRecipe", Storage="_Menus", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Menu Menu
		{
			get
			{
				return this._Menus.Entity;
			}
			set
			{
				Menu previousValue = this._Menus.Entity;
				if (((previousValue != value) 
							|| (this._Menus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menus.Entity = null;
						previousValue.MenuRecipes.Remove(this);
					}
					this._Menus.Entity = value;
					if ((value != null))
					{
						value.MenuRecipes.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(int);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Recipe = default(EntityRef<Recipe>);
			this._Menus = default(EntityRef<Menu>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenuTypes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MenuType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MenuTypeId;
		
		private string _MenuTypeName;
		
		private int _SortOrder;
		
		private EntitySet<Menu> _Menus;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuTypeIdChanging(int value);
    partial void OnMenuTypeIdChanged();
    partial void OnMenuTypeNameChanging(string value);
    partial void OnMenuTypeNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    #endregion
		
		public MenuType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MenuTypeId
		{
			get
			{
				return this._MenuTypeId;
			}
			set
			{
				if ((this._MenuTypeId != value))
				{
					this.OnMenuTypeIdChanging(value);
					this.SendPropertyChanging();
					this._MenuTypeId = value;
					this.SendPropertyChanged("MenuTypeId");
					this.OnMenuTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuTypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string MenuTypeName
		{
			get
			{
				return this._MenuTypeName;
			}
			set
			{
				if ((this._MenuTypeName != value))
				{
					this.OnMenuTypeNameChanging(value);
					this.SendPropertyChanging();
					this._MenuTypeName = value;
					this.SendPropertyChanged("MenuTypeName");
					this.OnMenuTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MenuType_Menu", Storage="_Menus", ThisKey="MenuTypeId", OtherKey="MenuTypeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<Menu> Menus
		{
			get
			{
				if ((this.serializing 
							&& (this._Menus.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Menus;
			}
			set
			{
				this._Menus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.MenuType = this;
		}
		
		private void detach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.MenuType = null;
		}
		
		private void Initialize()
		{
			this._Menus = new EntitySet<Menu>(new Action<Menu>(this.attach_Menus), new Action<Menu>(this.detach_Menus));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MealRecipes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MealRecipe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MealId;
		
		private int _RecipeId;
		
		private int _Servings;
		
		private EntityRef<Recipe> _Recipe;
		
		private EntityRef<Meal> _Meal;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMealIdChanging(int value);
    partial void OnMealIdChanged();
    partial void OnRecipeIdChanging(int value);
    partial void OnRecipeIdChanged();
    partial void OnServingsChanging(int value);
    partial void OnServingsChanged();
    #endregion
		
		public MealRecipe()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MealId
		{
			get
			{
				return this._MealId;
			}
			set
			{
				if ((this._MealId != value))
				{
					if (this._Meal.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMealIdChanging(value);
					this.SendPropertyChanging();
					this._MealId = value;
					this.SendPropertyChanged("MealId");
					this.OnMealIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int RecipeId
		{
			get
			{
				return this._RecipeId;
			}
			set
			{
				if ((this._RecipeId != value))
				{
					if (this._Recipe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecipeIdChanging(value);
					this.SendPropertyChanging();
					this._RecipeId = value;
					this.SendPropertyChanged("RecipeId");
					this.OnRecipeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Servings", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int Servings
		{
			get
			{
				return this._Servings;
			}
			set
			{
				if ((this._Servings != value))
				{
					this.OnServingsChanging(value);
					this.SendPropertyChanging();
					this._Servings = value;
					this.SendPropertyChanged("Servings");
					this.OnServingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recipe_MealRecipe", Storage="_Recipe", ThisKey="RecipeId", OtherKey="RecipeId", IsForeignKey=true)]
		public Recipe Recipe
		{
			get
			{
				return this._Recipe.Entity;
			}
			set
			{
				Recipe previousValue = this._Recipe.Entity;
				if (((previousValue != value) 
							|| (this._Recipe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Recipe.Entity = null;
						previousValue.MealRecipes.Remove(this);
					}
					this._Recipe.Entity = value;
					if ((value != null))
					{
						value.MealRecipes.Add(this);
						this._RecipeId = value.RecipeId;
					}
					else
					{
						this._RecipeId = default(int);
					}
					this.SendPropertyChanged("Recipe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meal_MealRecipe", Storage="_Meal", ThisKey="MealId", OtherKey="MealId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Meal Meal
		{
			get
			{
				return this._Meal.Entity;
			}
			set
			{
				Meal previousValue = this._Meal.Entity;
				if (((previousValue != value) 
							|| (this._Meal.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Meal.Entity = null;
						previousValue.MealRecipes.Remove(this);
					}
					this._Meal.Entity = value;
					if ((value != null))
					{
						value.MealRecipes.Add(this);
						this._MealId = value.MealId;
					}
					else
					{
						this._MealId = default(int);
					}
					this.SendPropertyChanged("Meal");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Recipe = default(EntityRef<Recipe>);
			this._Meal = default(EntityRef<Meal>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MealTypes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MealType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MealTypeId;
		
		private string _MealTypeName;
		
		private int _SortOrder;
		
		private EntitySet<Meal> _Meals;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMealTypeIdChanging(int value);
    partial void OnMealTypeIdChanged();
    partial void OnMealTypeNameChanging(string value);
    partial void OnMealTypeNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    #endregion
		
		public MealType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MealTypeId
		{
			get
			{
				return this._MealTypeId;
			}
			set
			{
				if ((this._MealTypeId != value))
				{
					this.OnMealTypeIdChanging(value);
					this.SendPropertyChanging();
					this._MealTypeId = value;
					this.SendPropertyChanged("MealTypeId");
					this.OnMealTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealTypeName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string MealTypeName
		{
			get
			{
				return this._MealTypeName;
			}
			set
			{
				if ((this._MealTypeName != value))
				{
					this.OnMealTypeNameChanging(value);
					this.SendPropertyChanging();
					this._MealTypeName = value;
					this.SendPropertyChanged("MealTypeName");
					this.OnMealTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MealType_Meal", Storage="_Meals", ThisKey="MealTypeId", OtherKey="MealTypeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<Meal> Meals
		{
			get
			{
				if ((this.serializing 
							&& (this._Meals.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Meals;
			}
			set
			{
				this._Meals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Meals(Meal entity)
		{
			this.SendPropertyChanging();
			entity.MealType = this;
		}
		
		private void detach_Meals(Meal entity)
		{
			this.SendPropertyChanging();
			entity.MealType = null;
		}
		
		private void Initialize()
		{
			this._Meals = new EntitySet<Meal>(new Action<Meal>(this.attach_Meals), new Action<Meal>(this.detach_Meals));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CourseTypes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class CourseType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CourseTypeId;
		
		private string _CourseTypeName;
		
		private int _SortOrder;
		
		private EntitySet<Meal> _Meals;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCourseTypeIdChanging(int value);
    partial void OnCourseTypeIdChanged();
    partial void OnCourseTypeNameChanging(string value);
    partial void OnCourseTypeNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    #endregion
		
		public CourseType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CourseTypeId
		{
			get
			{
				return this._CourseTypeId;
			}
			set
			{
				if ((this._CourseTypeId != value))
				{
					this.OnCourseTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CourseTypeId = value;
					this.SendPropertyChanged("CourseTypeId");
					this.OnCourseTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTypeName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string CourseTypeName
		{
			get
			{
				return this._CourseTypeName;
			}
			set
			{
				if ((this._CourseTypeName != value))
				{
					this.OnCourseTypeNameChanging(value);
					this.SendPropertyChanging();
					this._CourseTypeName = value;
					this.SendPropertyChanged("CourseTypeName");
					this.OnCourseTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseType_Meal", Storage="_Meals", ThisKey="CourseTypeId", OtherKey="CourseTypeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<Meal> Meals
		{
			get
			{
				if ((this.serializing 
							&& (this._Meals.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Meals;
			}
			set
			{
				this._Meals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Meals(Meal entity)
		{
			this.SendPropertyChanging();
			entity.CourseType = this;
		}
		
		private void detach_Meals(Meal entity)
		{
			this.SendPropertyChanging();
			entity.CourseType = null;
		}
		
		private void Initialize()
		{
			this._Meals = new EntitySet<Meal>(new Action<Meal>(this.attach_Meals), new Action<Meal>(this.detach_Meals));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Categories")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryId;
		
		private string _CategoryName;
		
		private System.Nullable<int> _ParentCategoryId;
		
		private int _SortOrder;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<Category> _Categories;
		
		private EntitySet<RecipeCategory> _RecipeCategories;
		
		private EntityRef<Category> _Category1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnParentCategoryIdChanging(System.Nullable<int> value);
    partial void OnParentCategoryIdChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Category()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentCategoryId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> ParentCategoryId
		{
			get
			{
				return this._ParentCategoryId;
			}
			set
			{
				if ((this._ParentCategoryId != value))
				{
					if (this._Category1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ParentCategoryId = value;
					this.SendPropertyChanged("ParentCategoryId");
					this.OnParentCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_Categories", ThisKey="CategoryId", OtherKey="ParentCategoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<Category> Categories
		{
			get
			{
				if ((this.serializing 
							&& (this._Categories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Categories;
			}
			set
			{
				this._Categories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_RecipeCategory", Storage="_RecipeCategories", ThisKey="CategoryId", OtherKey="CategoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<RecipeCategory> RecipeCategories
		{
			get
			{
				if ((this.serializing 
							&& (this._RecipeCategories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RecipeCategories;
			}
			set
			{
				this._RecipeCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_Category", Storage="_Category1", ThisKey="ParentCategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public Category ParentCategory
		{
			get
			{
				return this._Category1.Entity;
			}
			set
			{
				Category previousValue = this._Category1.Entity;
				if (((previousValue != value) 
							|| (this._Category1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category1.Entity = null;
						previousValue.Categories.Remove(this);
					}
					this._Category1.Entity = value;
					if ((value != null))
					{
						value.Categories.Add(this);
						this._ParentCategoryId = value.CategoryId;
					}
					else
					{
						this._ParentCategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ParentCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.ParentCategory = this;
		}
		
		private void detach_Categories(Category entity)
		{
			this.SendPropertyChanging();
			entity.ParentCategory = null;
		}
		
		private void attach_RecipeCategories(RecipeCategory entity)
		{
			this.SendPropertyChanging();
			entity.Category = this;
		}
		
		private void detach_RecipeCategories(RecipeCategory entity)
		{
			this.SendPropertyChanging();
			entity.Category = null;
		}
		
		private void Initialize()
		{
			this._Categories = new EntitySet<Category>(new Action<Category>(this.attach_Categories), new Action<Category>(this.detach_Categories));
			this._RecipeCategories = new EntitySet<RecipeCategory>(new Action<RecipeCategory>(this.attach_RecipeCategories), new Action<RecipeCategory>(this.detach_RecipeCategories));
			this._Category1 = default(EntityRef<Category>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecipeCategories")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RecipeCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecipeId;
		
		private int _CategoryId;
		
		private EntityRef<Category> _Category;
		
		private EntityRef<Recipe> _Recipe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecipeIdChanging(int value);
    partial void OnRecipeIdChanged();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    #endregion
		
		public RecipeCategory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RecipeId
		{
			get
			{
				return this._RecipeId;
			}
			set
			{
				if ((this._RecipeId != value))
				{
					if (this._Recipe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecipeIdChanging(value);
					this.SendPropertyChanging();
					this._RecipeId = value;
					this.SendPropertyChanged("RecipeId");
					this.OnRecipeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Category_RecipeCategory", Storage="_Category", ThisKey="CategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public Category Category
		{
			get
			{
				return this._Category.Entity;
			}
			set
			{
				Category previousValue = this._Category.Entity;
				if (((previousValue != value) 
							|| (this._Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Category.Entity = null;
						previousValue.RecipeCategories.Remove(this);
					}
					this._Category.Entity = value;
					if ((value != null))
					{
						value.RecipeCategories.Add(this);
						this._CategoryId = value.CategoryId;
					}
					else
					{
						this._CategoryId = default(int);
					}
					this.SendPropertyChanged("Category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recipe_RecipeCategory", Storage="_Recipe", ThisKey="RecipeId", OtherKey="RecipeId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Recipe Recipe
		{
			get
			{
				return this._Recipe.Entity;
			}
			set
			{
				Recipe previousValue = this._Recipe.Entity;
				if (((previousValue != value) 
							|| (this._Recipe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Recipe.Entity = null;
						previousValue.RecipeCategories.Remove(this);
					}
					this._Recipe.Entity = value;
					if ((value != null))
					{
						value.RecipeCategories.Add(this);
						this._RecipeId = value.RecipeId;
					}
					else
					{
						this._RecipeId = default(int);
					}
					this.SendPropertyChanged("Recipe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Category = default(EntityRef<Category>);
			this._Recipe = default(EntityRef<Recipe>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecipeIngredientsList")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RecipeIngredientsView
	{
		
		private int _RecipeId;
		
		private int _IngredientId;
		
		private int _FoodId;
		
		private int _MeasurementUnitId;
		
		private string _RecipeName;
		
		private decimal _Quantity;
		
		private string _UnitName;
		
		private string _FoodName;
		
		private string _DisplayIngredient;
		
		public RecipeIngredientsView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RecipeId
		{
			get
			{
				return this._RecipeId;
			}
			set
			{
				if ((this._RecipeId != value))
				{
					this._RecipeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngredientId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int IngredientId
		{
			get
			{
				return this._IngredientId;
			}
			set
			{
				if ((this._IngredientId != value))
				{
					this._IngredientId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int FoodId
		{
			get
			{
				return this._FoodId;
			}
			set
			{
				if ((this._FoodId != value))
				{
					this._FoodId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasurementUnitId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int MeasurementUnitId
		{
			get
			{
				return this._MeasurementUnitId;
			}
			set
			{
				if ((this._MeasurementUnitId != value))
				{
					this._MeasurementUnitId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipeName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string RecipeName
		{
			get
			{
				return this._RecipeName;
			}
			set
			{
				if ((this._RecipeName != value))
				{
					this._RecipeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this._UnitName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string FoodName
		{
			get
			{
				return this._FoodName;
			}
			set
			{
				if ((this._FoodName != value))
				{
					this._FoodName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayIngredient", DbType="NVarChar(314)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string DisplayIngredient
		{
			get
			{
				return this._DisplayIngredient;
			}
			set
			{
				if ((this._DisplayIngredient != value))
				{
					this._DisplayIngredient = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FoodCategories")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class FoodCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FoodCategoryId;
		
		private string _FoodCategoryName;
		
		private System.Nullable<int> _ParentCategoryId;
		
		private int _ShopDepartmentId;
		
		private int _SortOrder;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<FoodCategory> _FoodCategories;
		
		private EntitySet<Food> _Foods;
		
		private EntityRef<FoodCategory> _FoodCategory1;
		
		private EntityRef<ShopDepartment> _ShopDepartment;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFoodCategoryIdChanging(int value);
    partial void OnFoodCategoryIdChanged();
    partial void OnFoodCategoryNameChanging(string value);
    partial void OnFoodCategoryNameChanged();
    partial void OnParentCategoryIdChanging(System.Nullable<int> value);
    partial void OnParentCategoryIdChanged();
    partial void OnShopDepartmentIdChanging(int value);
    partial void OnShopDepartmentIdChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public FoodCategory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodCategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int FoodCategoryId
		{
			get
			{
				return this._FoodCategoryId;
			}
			set
			{
				if ((this._FoodCategoryId != value))
				{
					this.OnFoodCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._FoodCategoryId = value;
					this.SendPropertyChanged("FoodCategoryId");
					this.OnFoodCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodCategoryName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string FoodCategoryName
		{
			get
			{
				return this._FoodCategoryName;
			}
			set
			{
				if ((this._FoodCategoryName != value))
				{
					this.OnFoodCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._FoodCategoryName = value;
					this.SendPropertyChanged("FoodCategoryName");
					this.OnFoodCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentCategoryId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> ParentCategoryId
		{
			get
			{
				return this._ParentCategoryId;
			}
			set
			{
				if ((this._ParentCategoryId != value))
				{
					if (this._FoodCategory1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ParentCategoryId = value;
					this.SendPropertyChanged("ParentCategoryId");
					this.OnParentCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShopDepartmentId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int ShopDepartmentId
		{
			get
			{
				return this._ShopDepartmentId;
			}
			set
			{
				if ((this._ShopDepartmentId != value))
				{
					if (this._ShopDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnShopDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._ShopDepartmentId = value;
					this.SendPropertyChanged("ShopDepartmentId");
					this.OnShopDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FoodCategory_FoodCategory", Storage="_FoodCategories", ThisKey="FoodCategoryId", OtherKey="ParentCategoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<FoodCategory> FoodCategories
		{
			get
			{
				if ((this.serializing 
							&& (this._FoodCategories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._FoodCategories;
			}
			set
			{
				this._FoodCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FoodCategory_Food", Storage="_Foods", ThisKey="FoodCategoryId", OtherKey="FoodCategoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<Food> Foods
		{
			get
			{
				if ((this.serializing 
							&& (this._Foods.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Foods;
			}
			set
			{
				this._Foods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FoodCategory_FoodCategory", Storage="_FoodCategory1", ThisKey="ParentCategoryId", OtherKey="FoodCategoryId", IsForeignKey=true)]
		public FoodCategory ParentFoodCategory
		{
			get
			{
				return this._FoodCategory1.Entity;
			}
			set
			{
				FoodCategory previousValue = this._FoodCategory1.Entity;
				if (((previousValue != value) 
							|| (this._FoodCategory1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FoodCategory1.Entity = null;
						previousValue.FoodCategories.Remove(this);
					}
					this._FoodCategory1.Entity = value;
					if ((value != null))
					{
						value.FoodCategories.Add(this);
						this._ParentCategoryId = value.FoodCategoryId;
					}
					else
					{
						this._ParentCategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ParentFoodCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ShopDepartment_FoodCategory", Storage="_ShopDepartment", ThisKey="ShopDepartmentId", OtherKey="ShopDepartmentId", IsForeignKey=true)]
		public ShopDepartment ShopDepartment
		{
			get
			{
				return this._ShopDepartment.Entity;
			}
			set
			{
				ShopDepartment previousValue = this._ShopDepartment.Entity;
				if (((previousValue != value) 
							|| (this._ShopDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ShopDepartment.Entity = null;
						previousValue.FoodCategories.Remove(this);
					}
					this._ShopDepartment.Entity = value;
					if ((value != null))
					{
						value.FoodCategories.Add(this);
						this._ShopDepartmentId = value.ShopDepartmentId;
					}
					else
					{
						this._ShopDepartmentId = default(int);
					}
					this.SendPropertyChanged("ShopDepartment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FoodCategories(FoodCategory entity)
		{
			this.SendPropertyChanging();
			entity.ParentFoodCategory = this;
		}
		
		private void detach_FoodCategories(FoodCategory entity)
		{
			this.SendPropertyChanging();
			entity.ParentFoodCategory = null;
		}
		
		private void attach_Foods(Food entity)
		{
			this.SendPropertyChanging();
			entity.FoodCategory = this;
		}
		
		private void detach_Foods(Food entity)
		{
			this.SendPropertyChanging();
			entity.FoodCategory = null;
		}
		
		private void Initialize()
		{
			this._FoodCategories = new EntitySet<FoodCategory>(new Action<FoodCategory>(this.attach_FoodCategories), new Action<FoodCategory>(this.detach_FoodCategories));
			this._Foods = new EntitySet<Food>(new Action<Food>(this.attach_Foods), new Action<Food>(this.detach_Foods));
			this._FoodCategory1 = default(EntityRef<FoodCategory>);
			this._ShopDepartment = default(EntityRef<ShopDepartment>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeneralItems")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GeneralItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GeneralItemId;
		
		private string _GeneralItemName;
		
		private int _SortOrder;
		
		private EntitySet<ShoppingListAdditionalItem> _ShoppingListAdditionalItems;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGeneralItemIdChanging(int value);
    partial void OnGeneralItemIdChanged();
    partial void OnGeneralItemNameChanging(string value);
    partial void OnGeneralItemNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    #endregion
		
		public GeneralItem()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneralItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int GeneralItemId
		{
			get
			{
				return this._GeneralItemId;
			}
			set
			{
				if ((this._GeneralItemId != value))
				{
					this.OnGeneralItemIdChanging(value);
					this.SendPropertyChanging();
					this._GeneralItemId = value;
					this.SendPropertyChanged("GeneralItemId");
					this.OnGeneralItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneralItemName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string GeneralItemName
		{
			get
			{
				return this._GeneralItemName;
			}
			set
			{
				if ((this._GeneralItemName != value))
				{
					this.OnGeneralItemNameChanging(value);
					this.SendPropertyChanging();
					this._GeneralItemName = value;
					this.SendPropertyChanged("GeneralItemName");
					this.OnGeneralItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeneralItem_ShoppingListAdditionalItem", Storage="_ShoppingListAdditionalItems", ThisKey="GeneralItemId", OtherKey="GeneralItemId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4, EmitDefaultValue=false)]
		public EntitySet<ShoppingListAdditionalItem> ShoppingListAdditionalItems
		{
			get
			{
				if ((this.serializing 
							&& (this._ShoppingListAdditionalItems.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ShoppingListAdditionalItems;
			}
			set
			{
				this._ShoppingListAdditionalItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ShoppingListAdditionalItems(ShoppingListAdditionalItem entity)
		{
			this.SendPropertyChanging();
			entity.GeneralItem = this;
		}
		
		private void detach_ShoppingListAdditionalItems(ShoppingListAdditionalItem entity)
		{
			this.SendPropertyChanging();
			entity.GeneralItem = null;
		}
		
		private void Initialize()
		{
			this._ShoppingListAdditionalItems = new EntitySet<ShoppingListAdditionalItem>(new Action<ShoppingListAdditionalItem>(this.attach_ShoppingListAdditionalItems), new Action<ShoppingListAdditionalItem>(this.detach_ShoppingListAdditionalItems));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ShoppingListAdditionalItems")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class ShoppingListAdditionalItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ShoppingListItemId;
		
		private int _MenuId;
		
		private System.Nullable<int> _GeneralItemId;
		
		private string _ItemName;
		
		private EntityRef<GeneralItem> _GeneralItem;
		
		private EntityRef<Menu> _Menus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnShoppingListItemIdChanging(int value);
    partial void OnShoppingListItemIdChanged();
    partial void OnMenuIdChanging(int value);
    partial void OnMenuIdChanged();
    partial void OnGeneralItemIdChanging(System.Nullable<int> value);
    partial void OnGeneralItemIdChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    #endregion
		
		public ShoppingListAdditionalItem()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShoppingListItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ShoppingListItemId
		{
			get
			{
				return this._ShoppingListItemId;
			}
			set
			{
				if ((this._ShoppingListItemId != value))
				{
					this.OnShoppingListItemIdChanging(value);
					this.SendPropertyChanging();
					this._ShoppingListItemId = value;
					this.SendPropertyChanged("ShoppingListItemId");
					this.OnShoppingListItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Menus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneralItemId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> GeneralItemId
		{
			get
			{
				return this._GeneralItemId;
			}
			set
			{
				if ((this._GeneralItemId != value))
				{
					if (this._GeneralItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGeneralItemIdChanging(value);
					this.SendPropertyChanging();
					this._GeneralItemId = value;
					this.SendPropertyChanged("GeneralItemId");
					this.OnGeneralItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemName", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeneralItem_ShoppingListAdditionalItem", Storage="_GeneralItem", ThisKey="GeneralItemId", OtherKey="GeneralItemId", IsForeignKey=true)]
		public GeneralItem GeneralItem
		{
			get
			{
				return this._GeneralItem.Entity;
			}
			set
			{
				GeneralItem previousValue = this._GeneralItem.Entity;
				if (((previousValue != value) 
							|| (this._GeneralItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeneralItem.Entity = null;
						previousValue.ShoppingListAdditionalItems.Remove(this);
					}
					this._GeneralItem.Entity = value;
					if ((value != null))
					{
						value.ShoppingListAdditionalItems.Add(this);
						this._GeneralItemId = value.GeneralItemId;
					}
					else
					{
						this._GeneralItemId = default(Nullable<int>);
					}
					this.SendPropertyChanged("GeneralItem");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_ShoppingListAdditionalItem", Storage="_Menus", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Menu Menu
		{
			get
			{
				return this._Menus.Entity;
			}
			set
			{
				Menu previousValue = this._Menus.Entity;
				if (((previousValue != value) 
							|| (this._Menus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menus.Entity = null;
						previousValue.ShoppingListAdditionalItems.Remove(this);
					}
					this._Menus.Entity = value;
					if ((value != null))
					{
						value.ShoppingListAdditionalItems.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(int);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._GeneralItem = default(EntityRef<GeneralItem>);
			this._Menus = default(EntityRef<Menu>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserTypes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserTypeId;
		
		private string _UserTypeName;
		
		private EntitySet<User> _Users;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserTypeIdChanging(int value);
    partial void OnUserTypeIdChanged();
    partial void OnUserTypeNameChanging(string value);
    partial void OnUserTypeNameChanged();
    #endregion
		
		public UserType()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UserTypeId
		{
			get
			{
				return this._UserTypeId;
			}
			set
			{
				if ((this._UserTypeId != value))
				{
					this.OnUserTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UserTypeId = value;
					this.SendPropertyChanged("UserTypeId");
					this.OnUserTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string UserTypeName
		{
			get
			{
				return this._UserTypeName;
			}
			set
			{
				if ((this._UserTypeName != value))
				{
					this.OnUserTypeNameChanging(value);
					this.SendPropertyChanging();
					this._UserTypeName = value;
					this.SendPropertyChanged("UserTypeName");
					this.OnUserTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserType_User", Storage="_Users", ThisKey="UserTypeId", OtherKey="UserTypeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<User> Users
		{
			get
			{
				if ((this.serializing 
							&& (this._Users.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserType = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.UserType = null;
		}
		
		private void Initialize()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NutCategories")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NutCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryId;
		
		private string _CategoryName;
		
		private EntitySet<NutItem> _NutItems;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIdChanging(int value);
    partial void OnCategoryIdChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    #endregion
		
		public NutCategory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NutCategory_NutItem", Storage="_NutItems", ThisKey="CategoryId", OtherKey="NutCategoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3, EmitDefaultValue=false)]
		public EntitySet<NutItem> NutItems
		{
			get
			{
				if ((this.serializing 
							&& (this._NutItems.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NutItems;
			}
			set
			{
				this._NutItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NutItems(NutItem entity)
		{
			this.SendPropertyChanging();
			entity.NutCategory = this;
		}
		
		private void detach_NutItems(NutItem entity)
		{
			this.SendPropertyChanging();
			entity.NutCategory = null;
		}
		
		private void Initialize()
		{
			this._NutItems = new EntitySet<NutItem>(new Action<NutItem>(this.attach_NutItems), new Action<NutItem>(this.detach_NutItems));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NutItems")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NutItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NutItemId;
		
		private string _NutItemName;
		
		private string _DisplayUnit;
		
		private int _NutCategoryId;
		
		private EntitySet<NutValue> _NutValues;
		
		private EntityRef<NutCategory> _NutCategory;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNutItemIdChanging(int value);
    partial void OnNutItemIdChanged();
    partial void OnNutItemNameChanging(string value);
    partial void OnNutItemNameChanged();
    partial void OnDisplayUnitChanging(string value);
    partial void OnDisplayUnitChanged();
    partial void OnNutCategoryIdChanging(int value);
    partial void OnNutCategoryIdChanged();
    #endregion
		
		public NutItem()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NutItemId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int NutItemId
		{
			get
			{
				return this._NutItemId;
			}
			set
			{
				if ((this._NutItemId != value))
				{
					this.OnNutItemIdChanging(value);
					this.SendPropertyChanging();
					this._NutItemId = value;
					this.SendPropertyChanged("NutItemId");
					this.OnNutItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NutItemName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NutItemName
		{
			get
			{
				return this._NutItemName;
			}
			set
			{
				if ((this._NutItemName != value))
				{
					this.OnNutItemNameChanging(value);
					this.SendPropertyChanging();
					this._NutItemName = value;
					this.SendPropertyChanged("NutItemName");
					this.OnNutItemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayUnit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string DisplayUnit
		{
			get
			{
				return this._DisplayUnit;
			}
			set
			{
				if ((this._DisplayUnit != value))
				{
					this.OnDisplayUnitChanging(value);
					this.SendPropertyChanging();
					this._DisplayUnit = value;
					this.SendPropertyChanged("DisplayUnit");
					this.OnDisplayUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NutCategoryId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int NutCategoryId
		{
			get
			{
				return this._NutCategoryId;
			}
			set
			{
				if ((this._NutCategoryId != value))
				{
					if (this._NutCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNutCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._NutCategoryId = value;
					this.SendPropertyChanged("NutCategoryId");
					this.OnNutCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NutItem_NutValue", Storage="_NutValues", ThisKey="NutItemId", OtherKey="NutItemId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<NutValue> NutValues
		{
			get
			{
				if ((this.serializing 
							&& (this._NutValues.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NutValues;
			}
			set
			{
				this._NutValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NutCategory_NutItem", Storage="_NutCategory", ThisKey="NutCategoryId", OtherKey="CategoryId", IsForeignKey=true)]
		public NutCategory NutCategory
		{
			get
			{
				return this._NutCategory.Entity;
			}
			set
			{
				NutCategory previousValue = this._NutCategory.Entity;
				if (((previousValue != value) 
							|| (this._NutCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NutCategory.Entity = null;
						previousValue.NutItems.Remove(this);
					}
					this._NutCategory.Entity = value;
					if ((value != null))
					{
						value.NutItems.Add(this);
						this._NutCategoryId = value.CategoryId;
					}
					else
					{
						this._NutCategoryId = default(int);
					}
					this.SendPropertyChanged("NutCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NutValues(NutValue entity)
		{
			this.SendPropertyChanging();
			entity.NutItem = this;
		}
		
		private void detach_NutValues(NutValue entity)
		{
			this.SendPropertyChanging();
			entity.NutItem = null;
		}
		
		private void Initialize()
		{
			this._NutValues = new EntitySet<NutValue>(new Action<NutValue>(this.attach_NutValues), new Action<NutValue>(this.detach_NutValues));
			this._NutCategory = default(EntityRef<NutCategory>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MBLSettings")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MBLSetting : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SettingKey;
		
		private string _SettingValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSettingKeyChanging(string value);
    partial void OnSettingKeyChanged();
    partial void OnSettingValueChanging(string value);
    partial void OnSettingValueChanged();
    #endregion
		
		public MBLSetting()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingKey", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public string SettingKey
		{
			get
			{
				return this._SettingKey;
			}
			set
			{
				if ((this._SettingKey != value))
				{
					this.OnSettingKeyChanging(value);
					this.SendPropertyChanging();
					this._SettingKey = value;
					this.SendPropertyChanged("SettingKey");
					this.OnSettingKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SettingValue", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string SettingValue
		{
			get
			{
				return this._SettingValue;
			}
			set
			{
				if ((this._SettingValue != value))
				{
					this.OnSettingValueChanging(value);
					this.SendPropertyChanging();
					this._SettingValue = value;
					this.SendPropertyChanged("SettingValue");
					this.OnSettingValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MCategories")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MCategoryId;
		
		private string _MCategoryName;
		
		private System.Nullable<int> _ParentMCategoryId;
		
		private int _SortOrder;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntitySet<MCategory> _MCategories;
		
		private EntitySet<MenuCategory> _MenuCategories;
		
		private EntityRef<MCategory> _MCategory1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMCategoryIdChanging(int value);
    partial void OnMCategoryIdChanged();
    partial void OnMCategoryNameChanging(string value);
    partial void OnMCategoryNameChanged();
    partial void OnParentMCategoryIdChanging(System.Nullable<int> value);
    partial void OnParentMCategoryIdChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MCategory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCategoryId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MCategoryId
		{
			get
			{
				return this._MCategoryId;
			}
			set
			{
				if ((this._MCategoryId != value))
				{
					this.OnMCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._MCategoryId = value;
					this.SendPropertyChanged("MCategoryId");
					this.OnMCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCategoryName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string MCategoryName
		{
			get
			{
				return this._MCategoryName;
			}
			set
			{
				if ((this._MCategoryName != value))
				{
					this.OnMCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._MCategoryName = value;
					this.SendPropertyChanged("MCategoryName");
					this.OnMCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentMCategoryId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> ParentMCategoryId
		{
			get
			{
				return this._ParentMCategoryId;
			}
			set
			{
				if ((this._ParentMCategoryId != value))
				{
					if (this._MCategory1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnParentMCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._ParentMCategoryId = value;
					this.SendPropertyChanged("ParentMCategoryId");
					this.OnParentMCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MCategory_MCategory", Storage="_MCategories", ThisKey="MCategoryId", OtherKey="ParentMCategoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<MCategory> MCategories
		{
			get
			{
				if ((this.serializing 
							&& (this._MCategories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MCategories;
			}
			set
			{
				this._MCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MCategory_MenuCategory", Storage="_MenuCategories", ThisKey="MCategoryId", OtherKey="MCategoryId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<MenuCategory> MenuCategories
		{
			get
			{
				if ((this.serializing 
							&& (this._MenuCategories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MenuCategories;
			}
			set
			{
				this._MenuCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MCategory_MCategory", Storage="_MCategory1", ThisKey="ParentMCategoryId", OtherKey="MCategoryId", IsForeignKey=true)]
		public MCategory MCategory1
		{
			get
			{
				return this._MCategory1.Entity;
			}
			set
			{
				MCategory previousValue = this._MCategory1.Entity;
				if (((previousValue != value) 
							|| (this._MCategory1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MCategory1.Entity = null;
						previousValue.MCategories.Remove(this);
					}
					this._MCategory1.Entity = value;
					if ((value != null))
					{
						value.MCategories.Add(this);
						this._ParentMCategoryId = value.MCategoryId;
					}
					else
					{
						this._ParentMCategoryId = default(Nullable<int>);
					}
					this.SendPropertyChanged("MCategory1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MCategories(MCategory entity)
		{
			this.SendPropertyChanging();
			entity.MCategory1 = this;
		}
		
		private void detach_MCategories(MCategory entity)
		{
			this.SendPropertyChanging();
			entity.MCategory1 = null;
		}
		
		private void attach_MenuCategories(MenuCategory entity)
		{
			this.SendPropertyChanging();
			entity.MCategory = this;
		}
		
		private void detach_MenuCategories(MenuCategory entity)
		{
			this.SendPropertyChanging();
			entity.MCategory = null;
		}
		
		private void Initialize()
		{
			this._MCategories = new EntitySet<MCategory>(new Action<MCategory>(this.attach_MCategories), new Action<MCategory>(this.detach_MCategories));
			this._MenuCategories = new EntitySet<MenuCategory>(new Action<MenuCategory>(this.attach_MenuCategories), new Action<MenuCategory>(this.detach_MenuCategories));
			this._MCategory1 = default(EntityRef<MCategory>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenuCategories")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MenuCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MenuId;
		
		private int _MCategoryId;
		
		private EntityRef<MCategory> _MCategory;
		
		private EntityRef<Menu> _Menus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIdChanging(int value);
    partial void OnMenuIdChanged();
    partial void OnMCategoryIdChanging(int value);
    partial void OnMCategoryIdChanged();
    #endregion
		
		public MenuCategory()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Menus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCategoryId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int MCategoryId
		{
			get
			{
				return this._MCategoryId;
			}
			set
			{
				if ((this._MCategoryId != value))
				{
					if (this._MCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._MCategoryId = value;
					this.SendPropertyChanged("MCategoryId");
					this.OnMCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MCategory_MenuCategory", Storage="_MCategory", ThisKey="MCategoryId", OtherKey="MCategoryId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MCategory MCategory
		{
			get
			{
				return this._MCategory.Entity;
			}
			set
			{
				MCategory previousValue = this._MCategory.Entity;
				if (((previousValue != value) 
							|| (this._MCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MCategory.Entity = null;
						previousValue.MenuCategories.Remove(this);
					}
					this._MCategory.Entity = value;
					if ((value != null))
					{
						value.MenuCategories.Add(this);
						this._MCategoryId = value.MCategoryId;
					}
					else
					{
						this._MCategoryId = default(int);
					}
					this.SendPropertyChanged("MCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_MenuCategory", Storage="_Menus", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Menu Menu
		{
			get
			{
				return this._Menus.Entity;
			}
			set
			{
				Menu previousValue = this._Menus.Entity;
				if (((previousValue != value) 
							|| (this._Menus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menus.Entity = null;
						previousValue.MenuCategories.Remove(this);
					}
					this._Menus.Entity = value;
					if ((value != null))
					{
						value.MenuCategories.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(int);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._MCategory = default(EntityRef<MCategory>);
			this._Menus = default(EntityRef<Menu>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Articles")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Article : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ArticleId;
		
		private string _Title;
		
		private string _Abstract;
		
		private string _Body;
		
		private string _Publisher;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnArticleIdChanging(int value);
    partial void OnArticleIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnAbstractChanging(string value);
    partial void OnAbstractChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnPublisherChanging(string value);
    partial void OnPublisherChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public Article()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ArticleId
		{
			get
			{
				return this._ArticleId;
			}
			set
			{
				if ((this._ArticleId != value))
				{
					this.OnArticleIdChanging(value);
					this.SendPropertyChanging();
					this._ArticleId = value;
					this.SendPropertyChanged("ArticleId");
					this.OnArticleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abstract", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Abstract
		{
			get
			{
				return this._Abstract;
			}
			set
			{
				if ((this._Abstract != value))
				{
					this.OnAbstractChanging(value);
					this.SendPropertyChanging();
					this._Abstract = value;
					this.SendPropertyChanged("Abstract");
					this.OnAbstractChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Publisher", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string Publisher
		{
			get
			{
				return this._Publisher;
			}
			set
			{
				if ((this._Publisher != value))
				{
					this.OnPublisherChanging(value);
					this.SendPropertyChanging();
					this._Publisher = value;
					this.SendPropertyChanged("Publisher");
					this.OnPublisherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recipes")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Recipe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecipeId;
		
		private string _RecipeName;
		
		private bool _IsPublic;
		
		private int _Servings;
		
		private string _PreparationMethod;
		
		private string _Remarks;
		
		private string _Source;
		
		private string _MediaLink;
		
		private int _SortOrder;
		
		private int _UserId;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private string _Tools;
		
		private bool _IsApproved;
		
		private System.Data.Linq.Binary _Picture;
		
		private string _VideoLink;
		
		private string _Description;
		
		private string _Tags;
		
		private System.Nullable<int> _DifficultyLevel;
		
		private System.Nullable<int> _PreperationTime;
		
		private System.Nullable<int> _CookingTime;
		
		private EntitySet<UserFavoriteRecipe> _UserFavoriteRecipes;
		
		private EntitySet<MenuRecipe> _MenuRecipes;
		
		private EntitySet<MealRecipe> _MealRecipes;
		
		private EntitySet<RecipeCategory> _RecipeCategories;
		
		private EntitySet<RecipesInShoppingList> _RecipesInShoppingLists;
		
		private EntitySet<Ingredient> _Ingredients;
		
		private EntityRef<User> _User;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecipeIdChanging(int value);
    partial void OnRecipeIdChanged();
    partial void OnRecipeNameChanging(string value);
    partial void OnRecipeNameChanged();
    partial void OnIsPublicChanging(bool value);
    partial void OnIsPublicChanged();
    partial void OnServingsChanging(int value);
    partial void OnServingsChanged();
    partial void OnPreparationMethodChanging(string value);
    partial void OnPreparationMethodChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnSourceChanging(string value);
    partial void OnSourceChanged();
    partial void OnMediaLinkChanging(string value);
    partial void OnMediaLinkChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnToolsChanging(string value);
    partial void OnToolsChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnVideoLinkChanging(string value);
    partial void OnVideoLinkChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTagsChanging(string value);
    partial void OnTagsChanged();
    partial void OnDifficultyLevelChanging(System.Nullable<int> value);
    partial void OnDifficultyLevelChanged();
    partial void OnPreperationTimeChanging(System.Nullable<int> value);
    partial void OnPreperationTimeChanged();
    partial void OnCookingTimeChanging(System.Nullable<int> value);
    partial void OnCookingTimeChanged();
    #endregion
		
		public Recipe()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RecipeId
		{
			get
			{
				return this._RecipeId;
			}
			set
			{
				if ((this._RecipeId != value))
				{
					this.OnRecipeIdChanging(value);
					this.SendPropertyChanging();
					this._RecipeId = value;
					this.SendPropertyChanged("RecipeId");
					this.OnRecipeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipeName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string RecipeName
		{
			get
			{
				return this._RecipeName;
			}
			set
			{
				if ((this._RecipeName != value))
				{
					this.OnRecipeNameChanging(value);
					this.SendPropertyChanging();
					this._RecipeName = value;
					this.SendPropertyChanged("RecipeName");
					this.OnRecipeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this.OnIsPublicChanging(value);
					this.SendPropertyChanging();
					this._IsPublic = value;
					this.SendPropertyChanged("IsPublic");
					this.OnIsPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Servings", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Servings
		{
			get
			{
				return this._Servings;
			}
			set
			{
				if ((this._Servings != value))
				{
					this.OnServingsChanging(value);
					this.SendPropertyChanging();
					this._Servings = value;
					this.SendPropertyChanged("Servings");
					this.OnServingsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparationMethod", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string PreparationMethod
		{
			get
			{
				return this._PreparationMethod;
			}
			set
			{
				if ((this._PreparationMethod != value))
				{
					this.OnPreparationMethodChanging(value);
					this.SendPropertyChanging();
					this._PreparationMethod = value;
					this.SendPropertyChanged("PreparationMethod");
					this.OnPreparationMethodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this.OnSourceChanging(value);
					this.SendPropertyChanging();
					this._Source = value;
					this.SendPropertyChanged("Source");
					this.OnSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaLink", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string MediaLink
		{
			get
			{
				return this._MediaLink;
			}
			set
			{
				if ((this._MediaLink != value))
				{
					this.OnMediaLinkChanging(value);
					this.SendPropertyChanging();
					this._MediaLink = value;
					this.SendPropertyChanged("MediaLink");
					this.OnMediaLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tools", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string Tools
		{
			get
			{
				return this._Tools;
			}
			set
			{
				if ((this._Tools != value))
				{
					this.OnToolsChanging(value);
					this.SendPropertyChanging();
					this._Tools = value;
					this.SendPropertyChanged("Tools");
					this.OnToolsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoLink", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string VideoLink
		{
			get
			{
				return this._VideoLink;
			}
			set
			{
				if ((this._VideoLink != value))
				{
					this.OnVideoLinkChanging(value);
					this.SendPropertyChanging();
					this._VideoLink = value;
					this.SendPropertyChanged("VideoLink");
					this.OnVideoLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tags", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				if ((this._Tags != value))
				{
					this.OnTagsChanging(value);
					this.SendPropertyChanging();
					this._Tags = value;
					this.SendPropertyChanged("Tags");
					this.OnTagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DifficultyLevel", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<int> DifficultyLevel
		{
			get
			{
				return this._DifficultyLevel;
			}
			set
			{
				if ((this._DifficultyLevel != value))
				{
					this.OnDifficultyLevelChanging(value);
					this.SendPropertyChanging();
					this._DifficultyLevel = value;
					this.SendPropertyChanged("DifficultyLevel");
					this.OnDifficultyLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreperationTime", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<int> PreperationTime
		{
			get
			{
				return this._PreperationTime;
			}
			set
			{
				if ((this._PreperationTime != value))
				{
					this.OnPreperationTimeChanging(value);
					this.SendPropertyChanging();
					this._PreperationTime = value;
					this.SendPropertyChanged("PreperationTime");
					this.OnPreperationTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CookingTime", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<int> CookingTime
		{
			get
			{
				return this._CookingTime;
			}
			set
			{
				if ((this._CookingTime != value))
				{
					this.OnCookingTimeChanging(value);
					this.SendPropertyChanging();
					this._CookingTime = value;
					this.SendPropertyChanged("CookingTime");
					this.OnCookingTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recipe_UserFavoriteRecipe", Storage="_UserFavoriteRecipes", ThisKey="RecipeId", OtherKey="RecipeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=22, EmitDefaultValue=false)]
		public EntitySet<UserFavoriteRecipe> UserFavoriteRecipes
		{
			get
			{
				if ((this.serializing 
							&& (this._UserFavoriteRecipes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserFavoriteRecipes;
			}
			set
			{
				this._UserFavoriteRecipes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recipe_MenuRecipe", Storage="_MenuRecipes", ThisKey="RecipeId", OtherKey="RecipeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=23, EmitDefaultValue=false)]
		public EntitySet<MenuRecipe> MenuRecipes
		{
			get
			{
				if ((this.serializing 
							&& (this._MenuRecipes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MenuRecipes;
			}
			set
			{
				this._MenuRecipes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recipe_MealRecipe", Storage="_MealRecipes", ThisKey="RecipeId", OtherKey="RecipeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=24, EmitDefaultValue=false)]
		public EntitySet<MealRecipe> MealRecipes
		{
			get
			{
				if ((this.serializing 
							&& (this._MealRecipes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MealRecipes;
			}
			set
			{
				this._MealRecipes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recipe_RecipeCategory", Storage="_RecipeCategories", ThisKey="RecipeId", OtherKey="RecipeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=25, EmitDefaultValue=false)]
		public EntitySet<RecipeCategory> RecipeCategories
		{
			get
			{
				if ((this.serializing 
							&& (this._RecipeCategories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RecipeCategories;
			}
			set
			{
				this._RecipeCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recipe_RecipesInShoppingList", Storage="_RecipesInShoppingLists", ThisKey="RecipeId", OtherKey="RECIPE_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=26, EmitDefaultValue=false)]
		public EntitySet<RecipesInShoppingList> RecipesInShoppingLists
		{
			get
			{
				if ((this.serializing 
							&& (this._RecipesInShoppingLists.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RecipesInShoppingLists;
			}
			set
			{
				this._RecipesInShoppingLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recipe_Ingredient", Storage="_Ingredients", ThisKey="RecipeId", OtherKey="RecipeId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=27, EmitDefaultValue=false)]
		public EntitySet<Ingredient> Ingredients
		{
			get
			{
				if ((this.serializing 
							&& (this._Ingredients.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Ingredients;
			}
			set
			{
				this._Ingredients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Recipe", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Recipes.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Recipes.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserFavoriteRecipes(UserFavoriteRecipe entity)
		{
			this.SendPropertyChanging();
			entity.Recipe = this;
		}
		
		private void detach_UserFavoriteRecipes(UserFavoriteRecipe entity)
		{
			this.SendPropertyChanging();
			entity.Recipe = null;
		}
		
		private void attach_MenuRecipes(MenuRecipe entity)
		{
			this.SendPropertyChanging();
			entity.Recipe = this;
		}
		
		private void detach_MenuRecipes(MenuRecipe entity)
		{
			this.SendPropertyChanging();
			entity.Recipe = null;
		}
		
		private void attach_MealRecipes(MealRecipe entity)
		{
			this.SendPropertyChanging();
			entity.Recipe = this;
		}
		
		private void detach_MealRecipes(MealRecipe entity)
		{
			this.SendPropertyChanging();
			entity.Recipe = null;
		}
		
		private void attach_RecipeCategories(RecipeCategory entity)
		{
			this.SendPropertyChanging();
			entity.Recipe = this;
		}
		
		private void detach_RecipeCategories(RecipeCategory entity)
		{
			this.SendPropertyChanging();
			entity.Recipe = null;
		}
		
		private void attach_RecipesInShoppingLists(RecipesInShoppingList entity)
		{
			this.SendPropertyChanging();
			entity.Recipe = this;
		}
		
		private void detach_RecipesInShoppingLists(RecipesInShoppingList entity)
		{
			this.SendPropertyChanging();
			entity.Recipe = null;
		}
		
		private void attach_Ingredients(Ingredient entity)
		{
			this.SendPropertyChanging();
			entity.Recipe = this;
		}
		
		private void detach_Ingredients(Ingredient entity)
		{
			this.SendPropertyChanging();
			entity.Recipe = null;
		}
		
		private void Initialize()
		{
			this._UserFavoriteRecipes = new EntitySet<UserFavoriteRecipe>(new Action<UserFavoriteRecipe>(this.attach_UserFavoriteRecipes), new Action<UserFavoriteRecipe>(this.detach_UserFavoriteRecipes));
			this._MenuRecipes = new EntitySet<MenuRecipe>(new Action<MenuRecipe>(this.attach_MenuRecipes), new Action<MenuRecipe>(this.detach_MenuRecipes));
			this._MealRecipes = new EntitySet<MealRecipe>(new Action<MealRecipe>(this.attach_MealRecipes), new Action<MealRecipe>(this.detach_MealRecipes));
			this._RecipeCategories = new EntitySet<RecipeCategory>(new Action<RecipeCategory>(this.attach_RecipeCategories), new Action<RecipeCategory>(this.detach_RecipeCategories));
			this._RecipesInShoppingLists = new EntitySet<RecipesInShoppingList>(new Action<RecipesInShoppingList>(this.attach_RecipesInShoppingLists), new Action<RecipesInShoppingList>(this.detach_RecipesInShoppingLists));
			this._Ingredients = new EntitySet<Ingredient>(new Action<Ingredient>(this.attach_Ingredients), new Action<Ingredient>(this.detach_Ingredients));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menus")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MenuId;
		
		private string _MenuName;
		
		private int _MenuTypeId;
		
		private string _Description;
		
		private int _SortOrder;
		
		private int _UserId;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _TempUserId;
		
		private bool _IsPublic;
		
		private string _Tags;
		
		private System.Data.Linq.Binary _Picture;
		
		private string _EmbeddedVideo;
		
		private EntitySet<MenuRecipe> _MenuRecipes;
		
		private EntitySet<ShoppingListAdditionalItem> _ShoppingListAdditionalItems;
		
		private EntitySet<MenuCategory> _MenuCategories;
		
		private EntitySet<UserFavoriteMenu> _UserFavoriteMenus;
		
		private EntitySet<Meal> _Meals;
		
		private EntitySet<MenusInShoppingList> _MenusInShoppingLists;
		
		private EntityRef<MenuType> _MenuType;
		
		private EntityRef<User> _User;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIdChanging(int value);
    partial void OnMenuIdChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnMenuTypeIdChanging(int value);
    partial void OnMenuTypeIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnTempUserIdChanging(System.Nullable<int> value);
    partial void OnTempUserIdChanged();
    partial void OnIsPublicChanging(bool value);
    partial void OnIsPublicChanged();
    partial void OnTagsChanging(string value);
    partial void OnTagsChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    partial void OnEmbeddedVideoChanging(string value);
    partial void OnEmbeddedVideoChanged();
    #endregion
		
		public Menu()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuTypeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int MenuTypeId
		{
			get
			{
				return this._MenuTypeId;
			}
			set
			{
				if ((this._MenuTypeId != value))
				{
					if (this._MenuType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuTypeIdChanging(value);
					this.SendPropertyChanging();
					this._MenuTypeId = value;
					this.SendPropertyChanged("MenuTypeId");
					this.OnMenuTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TempUserId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<int> TempUserId
		{
			get
			{
				return this._TempUserId;
			}
			set
			{
				if ((this._TempUserId != value))
				{
					this.OnTempUserIdChanging(value);
					this.SendPropertyChanging();
					this._TempUserId = value;
					this.SendPropertyChanged("TempUserId");
					this.OnTempUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this.OnIsPublicChanging(value);
					this.SendPropertyChanging();
					this._IsPublic = value;
					this.SendPropertyChanged("IsPublic");
					this.OnIsPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tags", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public string Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				if ((this._Tags != value))
				{
					this.OnTagsChanging(value);
					this.SendPropertyChanging();
					this._Tags = value;
					this.SendPropertyChanged("Tags");
					this.OnTagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmbeddedVideo", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public string EmbeddedVideo
		{
			get
			{
				return this._EmbeddedVideo;
			}
			set
			{
				if ((this._EmbeddedVideo != value))
				{
					this.OnEmbeddedVideoChanging(value);
					this.SendPropertyChanging();
					this._EmbeddedVideo = value;
					this.SendPropertyChanged("EmbeddedVideo");
					this.OnEmbeddedVideoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_MenuRecipe", Storage="_MenuRecipes", ThisKey="MenuId", OtherKey="MenuId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<MenuRecipe> MenuRecipes
		{
			get
			{
				if ((this.serializing 
							&& (this._MenuRecipes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MenuRecipes;
			}
			set
			{
				this._MenuRecipes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_ShoppingListAdditionalItem", Storage="_ShoppingListAdditionalItems", ThisKey="MenuId", OtherKey="MenuId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<ShoppingListAdditionalItem> ShoppingListAdditionalItems
		{
			get
			{
				if ((this.serializing 
							&& (this._ShoppingListAdditionalItems.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._ShoppingListAdditionalItems;
			}
			set
			{
				this._ShoppingListAdditionalItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_MenuCategory", Storage="_MenuCategories", ThisKey="MenuId", OtherKey="MenuId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<MenuCategory> MenuCategories
		{
			get
			{
				if ((this.serializing 
							&& (this._MenuCategories.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MenuCategories;
			}
			set
			{
				this._MenuCategories.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_UserFavoriteMenu", Storage="_UserFavoriteMenus", ThisKey="MenuId", OtherKey="MenuId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<UserFavoriteMenu> UserFavoriteMenus
		{
			get
			{
				if ((this.serializing 
							&& (this._UserFavoriteMenus.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserFavoriteMenus;
			}
			set
			{
				this._UserFavoriteMenus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Meal", Storage="_Meals", ThisKey="MenuId", OtherKey="MenuId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19, EmitDefaultValue=false)]
		public EntitySet<Meal> Meals
		{
			get
			{
				if ((this.serializing 
							&& (this._Meals.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Meals;
			}
			set
			{
				this._Meals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_MenusInShoppingList", Storage="_MenusInShoppingLists", ThisKey="MenuId", OtherKey="MenuId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20, EmitDefaultValue=false)]
		public EntitySet<MenusInShoppingList> MenusInShoppingLists
		{
			get
			{
				if ((this.serializing 
							&& (this._MenusInShoppingLists.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MenusInShoppingLists;
			}
			set
			{
				this._MenusInShoppingLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MenuType_Menu", Storage="_MenuType", ThisKey="MenuTypeId", OtherKey="MenuTypeId", IsForeignKey=true)]
		public MenuType MenuType
		{
			get
			{
				return this._MenuType.Entity;
			}
			set
			{
				MenuType previousValue = this._MenuType.Entity;
				if (((previousValue != value) 
							|| (this._MenuType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MenuType.Entity = null;
						previousValue.Menus.Remove(this);
					}
					this._MenuType.Entity = value;
					if ((value != null))
					{
						value.Menus.Add(this);
						this._MenuTypeId = value.MenuTypeId;
					}
					else
					{
						this._MenuTypeId = default(int);
					}
					this.SendPropertyChanged("MenuType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Menu", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Menus.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Menus.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MenuRecipes(MenuRecipe entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_MenuRecipes(MenuRecipe entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
		
		private void attach_ShoppingListAdditionalItems(ShoppingListAdditionalItem entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_ShoppingListAdditionalItems(ShoppingListAdditionalItem entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
		
		private void attach_MenuCategories(MenuCategory entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_MenuCategories(MenuCategory entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
		
		private void attach_UserFavoriteMenus(UserFavoriteMenu entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_UserFavoriteMenus(UserFavoriteMenu entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
		
		private void attach_Meals(Meal entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_Meals(Meal entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
		
		private void attach_MenusInShoppingLists(MenusInShoppingList entity)
		{
			this.SendPropertyChanging();
			entity.Menu = this;
		}
		
		private void detach_MenusInShoppingLists(MenusInShoppingList entity)
		{
			this.SendPropertyChanging();
			entity.Menu = null;
		}
		
		private void Initialize()
		{
			this._MenuRecipes = new EntitySet<MenuRecipe>(new Action<MenuRecipe>(this.attach_MenuRecipes), new Action<MenuRecipe>(this.detach_MenuRecipes));
			this._ShoppingListAdditionalItems = new EntitySet<ShoppingListAdditionalItem>(new Action<ShoppingListAdditionalItem>(this.attach_ShoppingListAdditionalItems), new Action<ShoppingListAdditionalItem>(this.detach_ShoppingListAdditionalItems));
			this._MenuCategories = new EntitySet<MenuCategory>(new Action<MenuCategory>(this.attach_MenuCategories), new Action<MenuCategory>(this.detach_MenuCategories));
			this._UserFavoriteMenus = new EntitySet<UserFavoriteMenu>(new Action<UserFavoriteMenu>(this.attach_UserFavoriteMenus), new Action<UserFavoriteMenu>(this.detach_UserFavoriteMenus));
			this._Meals = new EntitySet<Meal>(new Action<Meal>(this.attach_Meals), new Action<Meal>(this.detach_Meals));
			this._MenusInShoppingLists = new EntitySet<MenusInShoppingList>(new Action<MenusInShoppingList>(this.attach_MenusInShoppingLists), new Action<MenusInShoppingList>(this.detach_MenusInShoppingLists));
			this._MenuType = default(EntityRef<MenuType>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _Name;
		
		private string _Password;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _DisplayName;
		
		private int _UserTypeId;
		
		private string _Email;
		
		private bool _AgreeToMail;
		
		private EntitySet<UserFavoriteRecipe> _UserFavoriteRecipes;
		
		private EntitySet<Recipe> _Recipes;
		
		private EntitySet<Menu> _Menus;
		
		private EntitySet<UserFavoriteMenu> _UserFavoriteMenus;
		
		private EntitySet<RecipesInShoppingList> _RecipesInShoppingLists;
		
		private EntitySet<Food> _Foods;
		
		private EntitySet<Food> _Foods1;
		
		private EntitySet<MenusInShoppingList> _MenusInShoppingLists;
		
		private EntitySet<MissingList> _MissingLists;
		
		private EntityRef<UserType> _UserType;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnUserTypeIdChanging(int value);
    partial void OnUserTypeIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAgreeToMailChanging(bool value);
    partial void OnAgreeToMailChanged();
    #endregion
		
		public User()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int UserTypeId
		{
			get
			{
				return this._UserTypeId;
			}
			set
			{
				if ((this._UserTypeId != value))
				{
					if (this._UserType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserTypeIdChanging(value);
					this.SendPropertyChanging();
					this._UserTypeId = value;
					this.SendPropertyChanged("UserTypeId");
					this.OnUserTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgreeToMail", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public bool AgreeToMail
		{
			get
			{
				return this._AgreeToMail;
			}
			set
			{
				if ((this._AgreeToMail != value))
				{
					this.OnAgreeToMailChanging(value);
					this.SendPropertyChanging();
					this._AgreeToMail = value;
					this.SendPropertyChanged("AgreeToMail");
					this.OnAgreeToMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserFavoriteRecipe", Storage="_UserFavoriteRecipes", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<UserFavoriteRecipe> UserFavoriteRecipes
		{
			get
			{
				if ((this.serializing 
							&& (this._UserFavoriteRecipes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserFavoriteRecipes;
			}
			set
			{
				this._UserFavoriteRecipes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Recipe", Storage="_Recipes", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11, EmitDefaultValue=false)]
		public EntitySet<Recipe> Recipes
		{
			get
			{
				if ((this.serializing 
							&& (this._Recipes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Recipes;
			}
			set
			{
				this._Recipes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Menu", Storage="_Menus", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12, EmitDefaultValue=false)]
		public EntitySet<Menu> Menus
		{
			get
			{
				if ((this.serializing 
							&& (this._Menus.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Menus;
			}
			set
			{
				this._Menus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserFavoriteMenu", Storage="_UserFavoriteMenus", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13, EmitDefaultValue=false)]
		public EntitySet<UserFavoriteMenu> UserFavoriteMenus
		{
			get
			{
				if ((this.serializing 
							&& (this._UserFavoriteMenus.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._UserFavoriteMenus;
			}
			set
			{
				this._UserFavoriteMenus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RecipesInShoppingList", Storage="_RecipesInShoppingLists", ThisKey="UserId", OtherKey="USER_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<RecipesInShoppingList> RecipesInShoppingLists
		{
			get
			{
				if ((this.serializing 
							&& (this._RecipesInShoppingLists.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._RecipesInShoppingLists;
			}
			set
			{
				this._RecipesInShoppingLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Food", Storage="_Foods", ThisKey="UserId", OtherKey="CreatedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<Food> Foods
		{
			get
			{
				if ((this.serializing 
							&& (this._Foods.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Foods;
			}
			set
			{
				this._Foods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Food1", Storage="_Foods1", ThisKey="UserId", OtherKey="ModifiedBy")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<Food> Foods1
		{
			get
			{
				if ((this.serializing 
							&& (this._Foods1.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Foods1;
			}
			set
			{
				this._Foods1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MenusInShoppingList", Storage="_MenusInShoppingLists", ThisKey="UserId", OtherKey="UserId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<MenusInShoppingList> MenusInShoppingLists
		{
			get
			{
				if ((this.serializing 
							&& (this._MenusInShoppingLists.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MenusInShoppingLists;
			}
			set
			{
				this._MenusInShoppingLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MissingList", Storage="_MissingLists", ThisKey="UserId", OtherKey="CREATED_BY")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<MissingList> MissingLists
		{
			get
			{
				if ((this.serializing 
							&& (this._MissingLists.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MissingLists;
			}
			set
			{
				this._MissingLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserType_User", Storage="_UserType", ThisKey="UserTypeId", OtherKey="UserTypeId", IsForeignKey=true)]
		public UserType UserType
		{
			get
			{
				return this._UserType.Entity;
			}
			set
			{
				UserType previousValue = this._UserType.Entity;
				if (((previousValue != value) 
							|| (this._UserType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserType.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._UserType.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._UserTypeId = value.UserTypeId;
					}
					else
					{
						this._UserTypeId = default(int);
					}
					this.SendPropertyChanged("UserType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserFavoriteRecipes(UserFavoriteRecipe entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserFavoriteRecipes(UserFavoriteRecipe entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Recipes(Recipe entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Recipes(Recipe entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Menus(Menu entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_UserFavoriteMenus(UserFavoriteMenu entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserFavoriteMenus(UserFavoriteMenu entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_RecipesInShoppingLists(RecipesInShoppingList entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_RecipesInShoppingLists(RecipesInShoppingList entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Foods(Food entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Foods(Food entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Foods1(Food entity)
		{
			this.SendPropertyChanging();
			entity.User1 = this;
		}
		
		private void detach_Foods1(Food entity)
		{
			this.SendPropertyChanging();
			entity.User1 = null;
		}
		
		private void attach_MenusInShoppingLists(MenusInShoppingList entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_MenusInShoppingLists(MenusInShoppingList entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_MissingLists(MissingList entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_MissingLists(MissingList entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void Initialize()
		{
			this._UserFavoriteRecipes = new EntitySet<UserFavoriteRecipe>(new Action<UserFavoriteRecipe>(this.attach_UserFavoriteRecipes), new Action<UserFavoriteRecipe>(this.detach_UserFavoriteRecipes));
			this._Recipes = new EntitySet<Recipe>(new Action<Recipe>(this.attach_Recipes), new Action<Recipe>(this.detach_Recipes));
			this._Menus = new EntitySet<Menu>(new Action<Menu>(this.attach_Menus), new Action<Menu>(this.detach_Menus));
			this._UserFavoriteMenus = new EntitySet<UserFavoriteMenu>(new Action<UserFavoriteMenu>(this.attach_UserFavoriteMenus), new Action<UserFavoriteMenu>(this.detach_UserFavoriteMenus));
			this._RecipesInShoppingLists = new EntitySet<RecipesInShoppingList>(new Action<RecipesInShoppingList>(this.attach_RecipesInShoppingLists), new Action<RecipesInShoppingList>(this.detach_RecipesInShoppingLists));
			this._Foods = new EntitySet<Food>(new Action<Food>(this.attach_Foods), new Action<Food>(this.detach_Foods));
			this._Foods1 = new EntitySet<Food>(new Action<Food>(this.attach_Foods1), new Action<Food>(this.detach_Foods1));
			this._MenusInShoppingLists = new EntitySet<MenusInShoppingList>(new Action<MenusInShoppingList>(this.attach_MenusInShoppingLists), new Action<MenusInShoppingList>(this.detach_MenusInShoppingLists));
			this._MissingLists = new EntitySet<MissingList>(new Action<MissingList>(this.attach_MissingLists), new Action<MissingList>(this.detach_MissingLists));
			this._UserType = default(EntityRef<UserType>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserFavoriteMenus")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserFavoriteMenu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _MenuId;
		
		private EntityRef<Menu> _Menu;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnMenuIdChanging(int value);
    partial void OnMenuIdChanged();
    #endregion
		
		public UserFavoriteMenu()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_UserFavoriteMenu", Storage="_Menu", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Menu Menu
		{
			get
			{
				return this._Menu.Entity;
			}
			set
			{
				Menu previousValue = this._Menu.Entity;
				if (((previousValue != value) 
							|| (this._Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu.Entity = null;
						previousValue.UserFavoriteMenus.Remove(this);
					}
					this._Menu.Entity = value;
					if ((value != null))
					{
						value.UserFavoriteMenus.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(int);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserFavoriteMenu", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserFavoriteMenus.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserFavoriteMenus.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Menu = default(EntityRef<Menu>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Meals")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Meal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MealId;
		
		private int _MenuId;
		
		private int _MealTypeId;
		
		private System.Nullable<int> _DayIndex;
		
		private System.Nullable<int> _CourseTypeId;
		
		private System.Nullable<int> _Diners;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private string _Comments;
		
		private EntitySet<MealRecipe> _MealRecipes;
		
		private EntityRef<CourseType> _CourseType;
		
		private EntityRef<MealType> _MealType;
		
		private EntityRef<Menu> _Menu;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMealIdChanging(int value);
    partial void OnMealIdChanged();
    partial void OnMenuIdChanging(int value);
    partial void OnMenuIdChanged();
    partial void OnMealTypeIdChanging(int value);
    partial void OnMealTypeIdChanged();
    partial void OnDayIndexChanging(System.Nullable<int> value);
    partial void OnDayIndexChanged();
    partial void OnCourseTypeIdChanging(System.Nullable<int> value);
    partial void OnCourseTypeIdChanged();
    partial void OnDinersChanging(System.Nullable<int> value);
    partial void OnDinersChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    #endregion
		
		public Meal()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MealId
		{
			get
			{
				return this._MealId;
			}
			set
			{
				if ((this._MealId != value))
				{
					this.OnMealIdChanging(value);
					this.SendPropertyChanging();
					this._MealId = value;
					this.SendPropertyChanged("MealId");
					this.OnMealIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MealTypeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int MealTypeId
		{
			get
			{
				return this._MealTypeId;
			}
			set
			{
				if ((this._MealTypeId != value))
				{
					if (this._MealType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMealTypeIdChanging(value);
					this.SendPropertyChanging();
					this._MealTypeId = value;
					this.SendPropertyChanged("MealTypeId");
					this.OnMealTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DayIndex", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<int> DayIndex
		{
			get
			{
				return this._DayIndex;
			}
			set
			{
				if ((this._DayIndex != value))
				{
					this.OnDayIndexChanging(value);
					this.SendPropertyChanging();
					this._DayIndex = value;
					this.SendPropertyChanged("DayIndex");
					this.OnDayIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseTypeId", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> CourseTypeId
		{
			get
			{
				return this._CourseTypeId;
			}
			set
			{
				if ((this._CourseTypeId != value))
				{
					if (this._CourseType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCourseTypeIdChanging(value);
					this.SendPropertyChanging();
					this._CourseTypeId = value;
					this.SendPropertyChanged("CourseTypeId");
					this.OnCourseTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diners", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> Diners
		{
			get
			{
				return this._Diners;
			}
			set
			{
				if ((this._Diners != value))
				{
					this.OnDinersChanging(value);
					this.SendPropertyChanging();
					this._Diners = value;
					this.SendPropertyChanged("Diners");
					this.OnDinersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(1000)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Meal_MealRecipe", Storage="_MealRecipes", ThisKey="MealId", OtherKey="MealId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<MealRecipe> MealRecipes
		{
			get
			{
				if ((this.serializing 
							&& (this._MealRecipes.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MealRecipes;
			}
			set
			{
				this._MealRecipes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CourseType_Meal", Storage="_CourseType", ThisKey="CourseTypeId", OtherKey="CourseTypeId", IsForeignKey=true)]
		public CourseType CourseType
		{
			get
			{
				return this._CourseType.Entity;
			}
			set
			{
				CourseType previousValue = this._CourseType.Entity;
				if (((previousValue != value) 
							|| (this._CourseType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CourseType.Entity = null;
						previousValue.Meals.Remove(this);
					}
					this._CourseType.Entity = value;
					if ((value != null))
					{
						value.Meals.Add(this);
						this._CourseTypeId = value.CourseTypeId;
					}
					else
					{
						this._CourseTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CourseType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MealType_Meal", Storage="_MealType", ThisKey="MealTypeId", OtherKey="MealTypeId", IsForeignKey=true)]
		public MealType MealType
		{
			get
			{
				return this._MealType.Entity;
			}
			set
			{
				MealType previousValue = this._MealType.Entity;
				if (((previousValue != value) 
							|| (this._MealType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MealType.Entity = null;
						previousValue.Meals.Remove(this);
					}
					this._MealType.Entity = value;
					if ((value != null))
					{
						value.Meals.Add(this);
						this._MealTypeId = value.MealTypeId;
					}
					else
					{
						this._MealTypeId = default(int);
					}
					this.SendPropertyChanged("MealType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_Meal", Storage="_Menu", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Menu Menu
		{
			get
			{
				return this._Menu.Entity;
			}
			set
			{
				Menu previousValue = this._Menu.Entity;
				if (((previousValue != value) 
							|| (this._Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu.Entity = null;
						previousValue.Meals.Remove(this);
					}
					this._Menu.Entity = value;
					if ((value != null))
					{
						value.Meals.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(int);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MealRecipes(MealRecipe entity)
		{
			this.SendPropertyChanging();
			entity.Meal = this;
		}
		
		private void detach_MealRecipes(MealRecipe entity)
		{
			this.SendPropertyChanging();
			entity.Meal = null;
		}
		
		private void Initialize()
		{
			this._MealRecipes = new EntitySet<MealRecipe>(new Action<MealRecipe>(this.attach_MealRecipes), new Action<MealRecipe>(this.detach_MealRecipes));
			this._CourseType = default(EntityRef<CourseType>);
			this._MealType = default(EntityRef<MealType>);
			this._Menu = default(EntityRef<Menu>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeneralList")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GeneralList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _LIST_TYPE;
		
		private System.Nullable<bool> _ACTIVE;
		
		private int _CREATED_BY;
		
		private System.DateTime _CREATE_DATE;
		
		private EntitySet<GeneralListDetail> _GeneralListDetails;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLIST_TYPEChanging(System.Nullable<int> value);
    partial void OnLIST_TYPEChanged();
    partial void OnACTIVEChanging(System.Nullable<bool> value);
    partial void OnACTIVEChanged();
    partial void OnCREATED_BYChanging(int value);
    partial void OnCREATED_BYChanged();
    partial void OnCREATE_DATEChanging(System.DateTime value);
    partial void OnCREATE_DATEChanged();
    #endregion
		
		public GeneralList()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIST_TYPE", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> LIST_TYPE
		{
			get
			{
				return this._LIST_TYPE;
			}
			set
			{
				if ((this._LIST_TYPE != value))
				{
					this.OnLIST_TYPEChanging(value);
					this.SendPropertyChanging();
					this._LIST_TYPE = value;
					this.SendPropertyChanged("LIST_TYPE");
					this.OnLIST_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVE", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<bool> ACTIVE
		{
			get
			{
				return this._ACTIVE;
			}
			set
			{
				if ((this._ACTIVE != value))
				{
					this.OnACTIVEChanging(value);
					this.SendPropertyChanging();
					this._ACTIVE = value;
					this.SendPropertyChanged("ACTIVE");
					this.OnACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_BY", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int CREATED_BY
		{
			get
			{
				return this._CREATED_BY;
			}
			set
			{
				if ((this._CREATED_BY != value))
				{
					this.OnCREATED_BYChanging(value);
					this.SendPropertyChanging();
					this._CREATED_BY = value;
					this.SendPropertyChanged("CREATED_BY");
					this.OnCREATED_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeneralList_GeneralListDetail", Storage="_GeneralListDetails", ThisKey="ID", OtherKey="LIST_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<GeneralListDetail> GeneralListDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._GeneralListDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._GeneralListDetails;
			}
			set
			{
				this._GeneralListDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GeneralListDetails(GeneralListDetail entity)
		{
			this.SendPropertyChanging();
			entity.GeneralList = this;
		}
		
		private void detach_GeneralListDetails(GeneralListDetail entity)
		{
			this.SendPropertyChanging();
			entity.GeneralList = null;
		}
		
		private void Initialize()
		{
			this._GeneralListDetails = new EntitySet<GeneralListDetail>(new Action<GeneralListDetail>(this.attach_GeneralListDetails), new Action<GeneralListDetail>(this.detach_GeneralListDetails));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeneralListRecieps")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GeneralListReciep
	{
		
		private int _LIST_ID;
		
		private int _RECIEP_ID;
		
		public GeneralListReciep()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIST_ID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int LIST_ID
		{
			get
			{
				return this._LIST_ID;
			}
			set
			{
				if ((this._LIST_ID != value))
				{
					this._LIST_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECIEP_ID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int RECIEP_ID
		{
			get
			{
				return this._RECIEP_ID;
			}
			set
			{
				if ((this._RECIEP_ID != value))
				{
					this._RECIEP_ID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GeneralListDetails")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class GeneralListDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _LIST_ID;
		
		private string _ITEM_NAME;
		
		private string _COMPLETE_QUANTITY;
		
		private int _MEASUREMENT_UNIT_ID;
		
		private string _MEASUREMENT_UNIT;
		
		private EntityRef<GeneralList> _GeneralList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLIST_IDChanging(int value);
    partial void OnLIST_IDChanged();
    partial void OnITEM_NAMEChanging(string value);
    partial void OnITEM_NAMEChanged();
    partial void OnCOMPLETE_QUANTITYChanging(string value);
    partial void OnCOMPLETE_QUANTITYChanged();
    partial void OnMEASUREMENT_UNIT_IDChanging(int value);
    partial void OnMEASUREMENT_UNIT_IDChanged();
    partial void OnMEASUREMENT_UNITChanging(string value);
    partial void OnMEASUREMENT_UNITChanged();
    #endregion
		
		public GeneralListDetail()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIST_ID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int LIST_ID
		{
			get
			{
				return this._LIST_ID;
			}
			set
			{
				if ((this._LIST_ID != value))
				{
					if (this._GeneralList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLIST_IDChanging(value);
					this.SendPropertyChanging();
					this._LIST_ID = value;
					this.SendPropertyChanged("LIST_ID");
					this.OnLIST_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ITEM_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public string ITEM_NAME
		{
			get
			{
				return this._ITEM_NAME;
			}
			set
			{
				if ((this._ITEM_NAME != value))
				{
					this.OnITEM_NAMEChanging(value);
					this.SendPropertyChanging();
					this._ITEM_NAME = value;
					this.SendPropertyChanged("ITEM_NAME");
					this.OnITEM_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COMPLETE_QUANTITY", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string COMPLETE_QUANTITY
		{
			get
			{
				return this._COMPLETE_QUANTITY;
			}
			set
			{
				if ((this._COMPLETE_QUANTITY != value))
				{
					this.OnCOMPLETE_QUANTITYChanging(value);
					this.SendPropertyChanging();
					this._COMPLETE_QUANTITY = value;
					this.SendPropertyChanged("COMPLETE_QUANTITY");
					this.OnCOMPLETE_QUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEASUREMENT_UNIT_ID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int MEASUREMENT_UNIT_ID
		{
			get
			{
				return this._MEASUREMENT_UNIT_ID;
			}
			set
			{
				if ((this._MEASUREMENT_UNIT_ID != value))
				{
					this.OnMEASUREMENT_UNIT_IDChanging(value);
					this.SendPropertyChanging();
					this._MEASUREMENT_UNIT_ID = value;
					this.SendPropertyChanged("MEASUREMENT_UNIT_ID");
					this.OnMEASUREMENT_UNIT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEASUREMENT_UNIT", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string MEASUREMENT_UNIT
		{
			get
			{
				return this._MEASUREMENT_UNIT;
			}
			set
			{
				if ((this._MEASUREMENT_UNIT != value))
				{
					this.OnMEASUREMENT_UNITChanging(value);
					this.SendPropertyChanging();
					this._MEASUREMENT_UNIT = value;
					this.SendPropertyChanged("MEASUREMENT_UNIT");
					this.OnMEASUREMENT_UNITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GeneralList_GeneralListDetail", Storage="_GeneralList", ThisKey="LIST_ID", OtherKey="ID", IsForeignKey=true)]
		public GeneralList GeneralList
		{
			get
			{
				return this._GeneralList.Entity;
			}
			set
			{
				GeneralList previousValue = this._GeneralList.Entity;
				if (((previousValue != value) 
							|| (this._GeneralList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GeneralList.Entity = null;
						previousValue.GeneralListDetails.Remove(this);
					}
					this._GeneralList.Entity = value;
					if ((value != null))
					{
						value.GeneralListDetails.Add(this);
						this._LIST_ID = value.ID;
					}
					else
					{
						this._LIST_ID = default(int);
					}
					this.SendPropertyChanged("GeneralList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._GeneralList = default(EntityRef<GeneralList>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SummeryLists")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SummeryList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CREATED_BY;
		
		private System.DateTime _CREATE_DATE;
		
		private bool _ACTIVE;
		
		private EntitySet<SummeryListDetail> _SummeryListDetails;
		
		private EntitySet<SummerySource> _SummerySources;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCREATED_BYChanging(int value);
    partial void OnCREATED_BYChanged();
    partial void OnCREATE_DATEChanging(System.DateTime value);
    partial void OnCREATE_DATEChanged();
    partial void OnACTIVEChanging(bool value);
    partial void OnACTIVEChanged();
    #endregion
		
		public SummeryList()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_BY", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CREATED_BY
		{
			get
			{
				return this._CREATED_BY;
			}
			set
			{
				if ((this._CREATED_BY != value))
				{
					this.OnCREATED_BYChanging(value);
					this.SendPropertyChanging();
					this._CREATED_BY = value;
					this.SendPropertyChanged("CREATED_BY");
					this.OnCREATED_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVE", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public bool ACTIVE
		{
			get
			{
				return this._ACTIVE;
			}
			set
			{
				if ((this._ACTIVE != value))
				{
					this.OnACTIVEChanging(value);
					this.SendPropertyChanging();
					this._ACTIVE = value;
					this.SendPropertyChanged("ACTIVE");
					this.OnACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SummeryList_SummeryListDetail", Storage="_SummeryListDetails", ThisKey="ID", OtherKey="LIST_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<SummeryListDetail> SummeryListDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._SummeryListDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SummeryListDetails;
			}
			set
			{
				this._SummeryListDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SummeryList_SummerySource", Storage="_SummerySources", ThisKey="ID", OtherKey="SUMMERY_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6, EmitDefaultValue=false)]
		public EntitySet<SummerySource> SummerySources
		{
			get
			{
				if ((this.serializing 
							&& (this._SummerySources.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SummerySources;
			}
			set
			{
				this._SummerySources.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SummeryListDetails(SummeryListDetail entity)
		{
			this.SendPropertyChanging();
			entity.SummeryList = this;
		}
		
		private void detach_SummeryListDetails(SummeryListDetail entity)
		{
			this.SendPropertyChanging();
			entity.SummeryList = null;
		}
		
		private void attach_SummerySources(SummerySource entity)
		{
			this.SendPropertyChanging();
			entity.SummeryList = this;
		}
		
		private void detach_SummerySources(SummerySource entity)
		{
			this.SendPropertyChanging();
			entity.SummeryList = null;
		}
		
		private void Initialize()
		{
			this._SummeryListDetails = new EntitySet<SummeryListDetail>(new Action<SummeryListDetail>(this.attach_SummeryListDetails), new Action<SummeryListDetail>(this.detach_SummeryListDetails));
			this._SummerySources = new EntitySet<SummerySource>(new Action<SummerySource>(this.attach_SummerySources), new Action<SummerySource>(this.detach_SummerySources));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SummeryListDetails")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SummeryListDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _LIST_ID;
		
		private int _FOOD_ID;
		
		private string _FOOD_NAME;
		
		private decimal _QUANTITY;
		
		private int _MEASUREMENT_UNIT_ID;
		
		private string _MEASUREMENT_UNIT;
		
		private EntityRef<SummeryList> _SummeryList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLIST_IDChanging(int value);
    partial void OnLIST_IDChanged();
    partial void OnFOOD_IDChanging(int value);
    partial void OnFOOD_IDChanged();
    partial void OnFOOD_NAMEChanging(string value);
    partial void OnFOOD_NAMEChanged();
    partial void OnQUANTITYChanging(decimal value);
    partial void OnQUANTITYChanged();
    partial void OnMEASUREMENT_UNIT_IDChanging(int value);
    partial void OnMEASUREMENT_UNIT_IDChanged();
    partial void OnMEASUREMENT_UNITChanging(string value);
    partial void OnMEASUREMENT_UNITChanged();
    #endregion
		
		public SummeryListDetail()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIST_ID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int LIST_ID
		{
			get
			{
				return this._LIST_ID;
			}
			set
			{
				if ((this._LIST_ID != value))
				{
					if (this._SummeryList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLIST_IDChanging(value);
					this.SendPropertyChanging();
					this._LIST_ID = value;
					this.SendPropertyChanged("LIST_ID");
					this.OnLIST_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOOD_ID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int FOOD_ID
		{
			get
			{
				return this._FOOD_ID;
			}
			set
			{
				if ((this._FOOD_ID != value))
				{
					this.OnFOOD_IDChanging(value);
					this.SendPropertyChanging();
					this._FOOD_ID = value;
					this.SendPropertyChanged("FOOD_ID");
					this.OnFOOD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOOD_NAME", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string FOOD_NAME
		{
			get
			{
				return this._FOOD_NAME;
			}
			set
			{
				if ((this._FOOD_NAME != value))
				{
					this.OnFOOD_NAMEChanging(value);
					this.SendPropertyChanging();
					this._FOOD_NAME = value;
					this.SendPropertyChanged("FOOD_NAME");
					this.OnFOOD_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Decimal(5,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public decimal QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEASUREMENT_UNIT_ID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public int MEASUREMENT_UNIT_ID
		{
			get
			{
				return this._MEASUREMENT_UNIT_ID;
			}
			set
			{
				if ((this._MEASUREMENT_UNIT_ID != value))
				{
					this.OnMEASUREMENT_UNIT_IDChanging(value);
					this.SendPropertyChanging();
					this._MEASUREMENT_UNIT_ID = value;
					this.SendPropertyChanged("MEASUREMENT_UNIT_ID");
					this.OnMEASUREMENT_UNIT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEASUREMENT_UNIT", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string MEASUREMENT_UNIT
		{
			get
			{
				return this._MEASUREMENT_UNIT;
			}
			set
			{
				if ((this._MEASUREMENT_UNIT != value))
				{
					this.OnMEASUREMENT_UNITChanging(value);
					this.SendPropertyChanging();
					this._MEASUREMENT_UNIT = value;
					this.SendPropertyChanged("MEASUREMENT_UNIT");
					this.OnMEASUREMENT_UNITChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SummeryList_SummeryListDetail", Storage="_SummeryList", ThisKey="LIST_ID", OtherKey="ID", IsForeignKey=true)]
		public SummeryList SummeryList
		{
			get
			{
				return this._SummeryList.Entity;
			}
			set
			{
				SummeryList previousValue = this._SummeryList.Entity;
				if (((previousValue != value) 
							|| (this._SummeryList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SummeryList.Entity = null;
						previousValue.SummeryListDetails.Remove(this);
					}
					this._SummeryList.Entity = value;
					if ((value != null))
					{
						value.SummeryListDetails.Add(this);
						this._LIST_ID = value.ID;
					}
					else
					{
						this._LIST_ID = default(int);
					}
					this.SendPropertyChanged("SummeryList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SummeryList = default(EntityRef<SummeryList>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SummerySources")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SummerySource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _SUMMERY_ID;
		
		private int _SOURCE_ID;
		
		private int _FOOD_ID;
		
		private System.Nullable<decimal> _QUANTITY;
		
		private EntityRef<SummeryList> _SummeryList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSUMMERY_IDChanging(int value);
    partial void OnSUMMERY_IDChanged();
    partial void OnSOURCE_IDChanging(int value);
    partial void OnSOURCE_IDChanged();
    partial void OnFOOD_IDChanging(int value);
    partial void OnFOOD_IDChanged();
    partial void OnQUANTITYChanging(System.Nullable<decimal> value);
    partial void OnQUANTITYChanged();
    #endregion
		
		public SummerySource()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUMMERY_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int SUMMERY_ID
		{
			get
			{
				return this._SUMMERY_ID;
			}
			set
			{
				if ((this._SUMMERY_ID != value))
				{
					if (this._SummeryList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSUMMERY_IDChanging(value);
					this.SendPropertyChanging();
					this._SUMMERY_ID = value;
					this.SendPropertyChanged("SUMMERY_ID");
					this.OnSUMMERY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOURCE_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SOURCE_ID
		{
			get
			{
				return this._SOURCE_ID;
			}
			set
			{
				if ((this._SOURCE_ID != value))
				{
					this.OnSOURCE_IDChanging(value);
					this.SendPropertyChanging();
					this._SOURCE_ID = value;
					this.SendPropertyChanged("SOURCE_ID");
					this.OnSOURCE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOOD_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int FOOD_ID
		{
			get
			{
				return this._FOOD_ID;
			}
			set
			{
				if ((this._FOOD_ID != value))
				{
					this.OnFOOD_IDChanging(value);
					this.SendPropertyChanging();
					this._FOOD_ID = value;
					this.SendPropertyChanged("FOOD_ID");
					this.OnFOOD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Decimal(5,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SummeryList_SummerySource", Storage="_SummeryList", ThisKey="SUMMERY_ID", OtherKey="ID", IsForeignKey=true)]
		public SummeryList SummeryList
		{
			get
			{
				return this._SummeryList.Entity;
			}
			set
			{
				SummeryList previousValue = this._SummeryList.Entity;
				if (((previousValue != value) 
							|| (this._SummeryList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SummeryList.Entity = null;
						previousValue.SummerySources.Remove(this);
					}
					this._SummeryList.Entity = value;
					if ((value != null))
					{
						value.SummerySources.Add(this);
						this._SUMMERY_ID = value.ID;
					}
					else
					{
						this._SUMMERY_ID = default(int);
					}
					this.SendPropertyChanged("SummeryList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SummeryList = default(EntityRef<SummeryList>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecipesView")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RecipesView
	{
		
		private int _RecipeId;
		
		private string _RecipeName;
		
		private bool _IsPublic;
		
		private int _Servings;
		
		private string _PreparationMethod;
		
		private string _Remarks;
		
		private string _Source;
		
		private string _MediaLink;
		
		private int _SortOrder;
		
		private int _UserId;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private string _Tools;
		
		private bool _IsApproved;
		
		private System.Data.Linq.Binary _Picture;
		
		private string _VideoLink;
		
		private string _Description;
		
		private string _Tags;
		
		private System.Nullable<int> _DifficultyLevel;
		
		private System.Nullable<int> _PreperationTime;
		
		private System.Nullable<int> _CookingTime;
		
		public RecipesView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipeId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RecipeId
		{
			get
			{
				return this._RecipeId;
			}
			set
			{
				if ((this._RecipeId != value))
				{
					this._RecipeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipeName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string RecipeName
		{
			get
			{
				return this._RecipeName;
			}
			set
			{
				if ((this._RecipeName != value))
				{
					this._RecipeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this._IsPublic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Servings", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int Servings
		{
			get
			{
				return this._Servings;
			}
			set
			{
				if ((this._Servings != value))
				{
					this._Servings = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreparationMethod", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public string PreparationMethod
		{
			get
			{
				return this._PreparationMethod;
			}
			set
			{
				if ((this._PreparationMethod != value))
				{
					this._PreparationMethod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this._Remarks = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Source", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string Source
		{
			get
			{
				return this._Source;
			}
			set
			{
				if ((this._Source != value))
				{
					this._Source = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MediaLink", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public string MediaLink
		{
			get
			{
				return this._MediaLink;
			}
			set
			{
				if ((this._MediaLink != value))
				{
					this._MediaLink = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this._SortOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this._UserId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this._ModifiedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tools", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public string Tools
		{
			get
			{
				return this._Tools;
			}
			set
			{
				if ((this._Tools != value))
				{
					this._Tools = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14)]
		public bool IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this._IsApproved = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this._Picture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoLink", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16)]
		public string VideoLink
		{
			get
			{
				return this._VideoLink;
			}
			set
			{
				if ((this._VideoLink != value))
				{
					this._VideoLink = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tags", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18)]
		public string Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				if ((this._Tags != value))
				{
					this._Tags = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DifficultyLevel", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=19)]
		public System.Nullable<int> DifficultyLevel
		{
			get
			{
				return this._DifficultyLevel;
			}
			set
			{
				if ((this._DifficultyLevel != value))
				{
					this._DifficultyLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreperationTime", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=20)]
		public System.Nullable<int> PreperationTime
		{
			get
			{
				return this._PreperationTime;
			}
			set
			{
				if ((this._PreperationTime != value))
				{
					this._PreperationTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CookingTime", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=21)]
		public System.Nullable<int> CookingTime
		{
			get
			{
				return this._CookingTime;
			}
			set
			{
				if ((this._CookingTime != value))
				{
					this._CookingTime = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RecipesInShoppingList")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class RecipesInShoppingList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RECIPE_ID;
		
		private System.Nullable<int> _SERVINGS;
		
		private int _USER_ID;
		
		private EntityRef<Recipe> _Recipe;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRECIPE_IDChanging(int value);
    partial void OnRECIPE_IDChanged();
    partial void OnSERVINGSChanging(System.Nullable<int> value);
    partial void OnSERVINGSChanged();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    #endregion
		
		public RecipesInShoppingList()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RECIPE_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int RECIPE_ID
		{
			get
			{
				return this._RECIPE_ID;
			}
			set
			{
				if ((this._RECIPE_ID != value))
				{
					if (this._Recipe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRECIPE_IDChanging(value);
					this.SendPropertyChanging();
					this._RECIPE_ID = value;
					this.SendPropertyChanged("RECIPE_ID");
					this.OnRECIPE_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SERVINGS", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public System.Nullable<int> SERVINGS
		{
			get
			{
				return this._SERVINGS;
			}
			set
			{
				if ((this._SERVINGS != value))
				{
					this.OnSERVINGSChanging(value);
					this.SendPropertyChanging();
					this._SERVINGS = value;
					this.SendPropertyChanged("SERVINGS");
					this.OnSERVINGSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recipe_RecipesInShoppingList", Storage="_Recipe", ThisKey="RECIPE_ID", OtherKey="RecipeId", IsForeignKey=true)]
		public Recipe Recipe
		{
			get
			{
				return this._Recipe.Entity;
			}
			set
			{
				Recipe previousValue = this._Recipe.Entity;
				if (((previousValue != value) 
							|| (this._Recipe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Recipe.Entity = null;
						previousValue.RecipesInShoppingLists.Remove(this);
					}
					this._Recipe.Entity = value;
					if ((value != null))
					{
						value.RecipesInShoppingLists.Add(this);
						this._RECIPE_ID = value.RecipeId;
					}
					else
					{
						this._RECIPE_ID = default(int);
					}
					this.SendPropertyChanged("Recipe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_RecipesInShoppingList", Storage="_User", ThisKey="USER_ID", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.RecipesInShoppingLists.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.RecipesInShoppingLists.Add(this);
						this._USER_ID = value.UserId;
					}
					else
					{
						this._USER_ID = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Recipe = default(EntityRef<Recipe>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Food")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Food : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FoodId;
		
		private string _FoodName;
		
		private int _FoodCategoryId;
		
		private int _CalculateUnitId;
		
		private bool _IsTemporary;
		
		private string _Remarks;
		
		private int _SortOrder;
		
		private int _CreatedBy;
		
		private System.DateTime _CreatedDate;
		
		private int _ModifiedBy;
		
		private System.DateTime _ModifiedDate;
		
		private bool _PrintPicture;
		
		private System.Data.Linq.Binary _Picture;
		
		private EntitySet<NutValue> _NutValues;
		
		private EntitySet<MissingListDetail> _MissingListDetails;
		
		private EntitySet<SavedListDetail> _SavedListDetails;
		
		private EntitySet<Ingredient> _Ingredients;
		
		private EntitySet<MeasurementUnitsConvert> _MeasurementUnitsConverts;
		
		private EntityRef<User> _User;
		
		private EntityRef<FoodCategory> _FoodCategory;
		
		private EntityRef<User> _User1;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFoodIdChanging(int value);
    partial void OnFoodIdChanged();
    partial void OnFoodNameChanging(string value);
    partial void OnFoodNameChanged();
    partial void OnFoodCategoryIdChanging(int value);
    partial void OnFoodCategoryIdChanged();
    partial void OnCalculateUnitIdChanging(int value);
    partial void OnCalculateUnitIdChanged();
    partial void OnIsTemporaryChanging(bool value);
    partial void OnIsTemporaryChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnCreatedByChanging(int value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedByChanging(int value);
    partial void OnModifiedByChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnPrintPictureChanging(bool value);
    partial void OnPrintPictureChanged();
    partial void OnPictureChanging(System.Data.Linq.Binary value);
    partial void OnPictureChanged();
    #endregion
		
		public Food()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int FoodId
		{
			get
			{
				return this._FoodId;
			}
			set
			{
				if ((this._FoodId != value))
				{
					this.OnFoodIdChanging(value);
					this.SendPropertyChanging();
					this._FoodId = value;
					this.SendPropertyChanged("FoodId");
					this.OnFoodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string FoodName
		{
			get
			{
				return this._FoodName;
			}
			set
			{
				if ((this._FoodName != value))
				{
					this.OnFoodNameChanging(value);
					this.SendPropertyChanging();
					this._FoodName = value;
					this.SendPropertyChanged("FoodName");
					this.OnFoodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodCategoryId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int FoodCategoryId
		{
			get
			{
				return this._FoodCategoryId;
			}
			set
			{
				if ((this._FoodCategoryId != value))
				{
					if (this._FoodCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFoodCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._FoodCategoryId = value;
					this.SendPropertyChanged("FoodCategoryId");
					this.OnFoodCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CalculateUnitId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int CalculateUnitId
		{
			get
			{
				return this._CalculateUnitId;
			}
			set
			{
				if ((this._CalculateUnitId != value))
				{
					this.OnCalculateUnitIdChanging(value);
					this.SendPropertyChanging();
					this._CalculateUnitId = value;
					this.SendPropertyChanged("CalculateUnitId");
					this.OnCalculateUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTemporary", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public bool IsTemporary
		{
			get
			{
				return this._IsTemporary;
			}
			set
			{
				if ((this._IsTemporary != value))
				{
					this.OnIsTemporaryChanging(value);
					this.SendPropertyChanging();
					this._IsTemporary = value;
					this.SendPropertyChanged("IsTemporary");
					this.OnIsTemporaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedBy", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public int ModifiedBy
		{
			get
			{
				return this._ModifiedBy;
			}
			set
			{
				if ((this._ModifiedBy != value))
				{
					if (this._User1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnModifiedByChanging(value);
					this.SendPropertyChanging();
					this._ModifiedBy = value;
					this.SendPropertyChanged("ModifiedBy");
					this.OnModifiedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintPicture", DbType="Bit NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=12)]
		public bool PrintPicture
		{
			get
			{
				return this._PrintPicture;
			}
			set
			{
				if ((this._PrintPicture != value))
				{
					this.OnPrintPictureChanging(value);
					this.SendPropertyChanging();
					this._PrintPicture = value;
					this.SendPropertyChanged("PrintPicture");
					this.OnPrintPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=13)]
		public System.Data.Linq.Binary Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_NutValue", Storage="_NutValues", ThisKey="FoodId", OtherKey="FoodId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=14, EmitDefaultValue=false)]
		public EntitySet<NutValue> NutValues
		{
			get
			{
				if ((this.serializing 
							&& (this._NutValues.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._NutValues;
			}
			set
			{
				this._NutValues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_MissingListDetail", Storage="_MissingListDetails", ThisKey="FoodId", OtherKey="FOOD_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=15, EmitDefaultValue=false)]
		public EntitySet<MissingListDetail> MissingListDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._MissingListDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MissingListDetails;
			}
			set
			{
				this._MissingListDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_SavedListDetail", Storage="_SavedListDetails", ThisKey="FoodId", OtherKey="FOOD_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=16, EmitDefaultValue=false)]
		public EntitySet<SavedListDetail> SavedListDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._SavedListDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SavedListDetails;
			}
			set
			{
				this._SavedListDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_Ingredient", Storage="_Ingredients", ThisKey="FoodId", OtherKey="FoodId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=17, EmitDefaultValue=false)]
		public EntitySet<Ingredient> Ingredients
		{
			get
			{
				if ((this.serializing 
							&& (this._Ingredients.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Ingredients;
			}
			set
			{
				this._Ingredients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_MeasurementUnitsConvert", Storage="_MeasurementUnitsConverts", ThisKey="FoodId", OtherKey="FoodId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=18, EmitDefaultValue=false)]
		public EntitySet<MeasurementUnitsConvert> MeasurementUnitsConverts
		{
			get
			{
				if ((this.serializing 
							&& (this._MeasurementUnitsConverts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MeasurementUnitsConverts;
			}
			set
			{
				this._MeasurementUnitsConverts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Food", Storage="_User", ThisKey="CreatedBy", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Foods.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Foods.Add(this);
						this._CreatedBy = value.UserId;
					}
					else
					{
						this._CreatedBy = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FoodCategory_Food", Storage="_FoodCategory", ThisKey="FoodCategoryId", OtherKey="FoodCategoryId", IsForeignKey=true)]
		public FoodCategory FoodCategory
		{
			get
			{
				return this._FoodCategory.Entity;
			}
			set
			{
				FoodCategory previousValue = this._FoodCategory.Entity;
				if (((previousValue != value) 
							|| (this._FoodCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FoodCategory.Entity = null;
						previousValue.Foods.Remove(this);
					}
					this._FoodCategory.Entity = value;
					if ((value != null))
					{
						value.Foods.Add(this);
						this._FoodCategoryId = value.FoodCategoryId;
					}
					else
					{
						this._FoodCategoryId = default(int);
					}
					this.SendPropertyChanged("FoodCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Food1", Storage="_User1", ThisKey="ModifiedBy", OtherKey="UserId", IsForeignKey=true)]
		public User User1
		{
			get
			{
				return this._User1.Entity;
			}
			set
			{
				User previousValue = this._User1.Entity;
				if (((previousValue != value) 
							|| (this._User1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User1.Entity = null;
						previousValue.Foods1.Remove(this);
					}
					this._User1.Entity = value;
					if ((value != null))
					{
						value.Foods1.Add(this);
						this._ModifiedBy = value.UserId;
					}
					else
					{
						this._ModifiedBy = default(int);
					}
					this.SendPropertyChanged("User1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NutValues(NutValue entity)
		{
			this.SendPropertyChanging();
			entity.Food = this;
		}
		
		private void detach_NutValues(NutValue entity)
		{
			this.SendPropertyChanging();
			entity.Food = null;
		}
		
		private void attach_MissingListDetails(MissingListDetail entity)
		{
			this.SendPropertyChanging();
			entity.Food = this;
		}
		
		private void detach_MissingListDetails(MissingListDetail entity)
		{
			this.SendPropertyChanging();
			entity.Food = null;
		}
		
		private void attach_SavedListDetails(SavedListDetail entity)
		{
			this.SendPropertyChanging();
			entity.Food = this;
		}
		
		private void detach_SavedListDetails(SavedListDetail entity)
		{
			this.SendPropertyChanging();
			entity.Food = null;
		}
		
		private void attach_Ingredients(Ingredient entity)
		{
			this.SendPropertyChanging();
			entity.Food = this;
		}
		
		private void detach_Ingredients(Ingredient entity)
		{
			this.SendPropertyChanging();
			entity.Food = null;
		}
		
		private void attach_MeasurementUnitsConverts(MeasurementUnitsConvert entity)
		{
			this.SendPropertyChanging();
			entity.Food = this;
		}
		
		private void detach_MeasurementUnitsConverts(MeasurementUnitsConvert entity)
		{
			this.SendPropertyChanging();
			entity.Food = null;
		}
		
		private void Initialize()
		{
			this._NutValues = new EntitySet<NutValue>(new Action<NutValue>(this.attach_NutValues), new Action<NutValue>(this.detach_NutValues));
			this._MissingListDetails = new EntitySet<MissingListDetail>(new Action<MissingListDetail>(this.attach_MissingListDetails), new Action<MissingListDetail>(this.detach_MissingListDetails));
			this._SavedListDetails = new EntitySet<SavedListDetail>(new Action<SavedListDetail>(this.attach_SavedListDetails), new Action<SavedListDetail>(this.detach_SavedListDetails));
			this._Ingredients = new EntitySet<Ingredient>(new Action<Ingredient>(this.attach_Ingredients), new Action<Ingredient>(this.detach_Ingredients));
			this._MeasurementUnitsConverts = new EntitySet<MeasurementUnitsConvert>(new Action<MeasurementUnitsConvert>(this.attach_MeasurementUnitsConverts), new Action<MeasurementUnitsConvert>(this.detach_MeasurementUnitsConverts));
			this._User = default(EntityRef<User>);
			this._FoodCategory = default(EntityRef<FoodCategory>);
			this._User1 = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NutValues")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class NutValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FoodId;
		
		private int _NutItemId;
		
		private System.Nullable<decimal> _Value;
		
		private EntityRef<Food> _Food;
		
		private EntityRef<NutItem> _NutItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFoodIdChanging(int value);
    partial void OnFoodIdChanged();
    partial void OnNutItemIdChanging(int value);
    partial void OnNutItemIdChanged();
    partial void OnValueChanging(System.Nullable<decimal> value);
    partial void OnValueChanged();
    #endregion
		
		public NutValue()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int FoodId
		{
			get
			{
				return this._FoodId;
			}
			set
			{
				if ((this._FoodId != value))
				{
					if (this._Food.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFoodIdChanging(value);
					this.SendPropertyChanging();
					this._FoodId = value;
					this.SendPropertyChanged("FoodId");
					this.OnFoodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NutItemId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int NutItemId
		{
			get
			{
				return this._NutItemId;
			}
			set
			{
				if ((this._NutItemId != value))
				{
					if (this._NutItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNutItemIdChanging(value);
					this.SendPropertyChanging();
					this._NutItemId = value;
					this.SendPropertyChanged("NutItemId");
					this.OnNutItemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Decimal(18,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<decimal> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_NutValue", Storage="_Food", ThisKey="FoodId", OtherKey="FoodId", IsForeignKey=true)]
		public Food Food
		{
			get
			{
				return this._Food.Entity;
			}
			set
			{
				Food previousValue = this._Food.Entity;
				if (((previousValue != value) 
							|| (this._Food.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Food.Entity = null;
						previousValue.NutValues.Remove(this);
					}
					this._Food.Entity = value;
					if ((value != null))
					{
						value.NutValues.Add(this);
						this._FoodId = value.FoodId;
					}
					else
					{
						this._FoodId = default(int);
					}
					this.SendPropertyChanged("Food");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NutItem_NutValue", Storage="_NutItem", ThisKey="NutItemId", OtherKey="NutItemId", IsForeignKey=true)]
		public NutItem NutItem
		{
			get
			{
				return this._NutItem.Entity;
			}
			set
			{
				NutItem previousValue = this._NutItem.Entity;
				if (((previousValue != value) 
							|| (this._NutItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NutItem.Entity = null;
						previousValue.NutValues.Remove(this);
					}
					this._NutItem.Entity = value;
					if ((value != null))
					{
						value.NutValues.Add(this);
						this._NutItemId = value.NutItemId;
					}
					else
					{
						this._NutItemId = default(int);
					}
					this.SendPropertyChanged("NutItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Food = default(EntityRef<Food>);
			this._NutItem = default(EntityRef<NutItem>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MissingListDetails")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MissingListDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _LIST_ID;
		
		private int _FOOD_ID;
		
		private int _MEASUREMENT_UNIT_ID;
		
		private decimal _QUANTITY;
		
		private EntityRef<Food> _Food;
		
		private EntityRef<MissingList> _MissingList;
		
		private EntityRef<MeasurementUnit> _MeasurementUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLIST_IDChanging(int value);
    partial void OnLIST_IDChanged();
    partial void OnFOOD_IDChanging(int value);
    partial void OnFOOD_IDChanged();
    partial void OnMEASUREMENT_UNIT_IDChanging(int value);
    partial void OnMEASUREMENT_UNIT_IDChanged();
    partial void OnQUANTITYChanging(decimal value);
    partial void OnQUANTITYChanged();
    #endregion
		
		public MissingListDetail()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIST_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int LIST_ID
		{
			get
			{
				return this._LIST_ID;
			}
			set
			{
				if ((this._LIST_ID != value))
				{
					if (this._MissingList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLIST_IDChanging(value);
					this.SendPropertyChanging();
					this._LIST_ID = value;
					this.SendPropertyChanged("LIST_ID");
					this.OnLIST_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOOD_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int FOOD_ID
		{
			get
			{
				return this._FOOD_ID;
			}
			set
			{
				if ((this._FOOD_ID != value))
				{
					if (this._Food.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFOOD_IDChanging(value);
					this.SendPropertyChanging();
					this._FOOD_ID = value;
					this.SendPropertyChanged("FOOD_ID");
					this.OnFOOD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEASUREMENT_UNIT_ID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int MEASUREMENT_UNIT_ID
		{
			get
			{
				return this._MEASUREMENT_UNIT_ID;
			}
			set
			{
				if ((this._MEASUREMENT_UNIT_ID != value))
				{
					if (this._MeasurementUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMEASUREMENT_UNIT_IDChanging(value);
					this.SendPropertyChanging();
					this._MEASUREMENT_UNIT_ID = value;
					this.SendPropertyChanged("MEASUREMENT_UNIT_ID");
					this.OnMEASUREMENT_UNIT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Decimal(5,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public decimal QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_MissingListDetail", Storage="_Food", ThisKey="FOOD_ID", OtherKey="FoodId", IsForeignKey=true)]
		public Food Food
		{
			get
			{
				return this._Food.Entity;
			}
			set
			{
				Food previousValue = this._Food.Entity;
				if (((previousValue != value) 
							|| (this._Food.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Food.Entity = null;
						previousValue.MissingListDetails.Remove(this);
					}
					this._Food.Entity = value;
					if ((value != null))
					{
						value.MissingListDetails.Add(this);
						this._FOOD_ID = value.FoodId;
					}
					else
					{
						this._FOOD_ID = default(int);
					}
					this.SendPropertyChanged("Food");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MissingList_MissingListDetail", Storage="_MissingList", ThisKey="LIST_ID", OtherKey="ID", IsForeignKey=true)]
		public MissingList MissingList
		{
			get
			{
				return this._MissingList.Entity;
			}
			set
			{
				MissingList previousValue = this._MissingList.Entity;
				if (((previousValue != value) 
							|| (this._MissingList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MissingList.Entity = null;
						previousValue.MissingListDetails.Remove(this);
					}
					this._MissingList.Entity = value;
					if ((value != null))
					{
						value.MissingListDetails.Add(this);
						this._LIST_ID = value.ID;
					}
					else
					{
						this._LIST_ID = default(int);
					}
					this.SendPropertyChanged("MissingList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeasurementUnit_MissingListDetail", Storage="_MeasurementUnit", ThisKey="MEASUREMENT_UNIT_ID", OtherKey="UnitId", IsForeignKey=true)]
		public MeasurementUnit MeasurementUnit
		{
			get
			{
				return this._MeasurementUnit.Entity;
			}
			set
			{
				MeasurementUnit previousValue = this._MeasurementUnit.Entity;
				if (((previousValue != value) 
							|| (this._MeasurementUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeasurementUnit.Entity = null;
						previousValue.MissingListDetails.Remove(this);
					}
					this._MeasurementUnit.Entity = value;
					if ((value != null))
					{
						value.MissingListDetails.Add(this);
						this._MEASUREMENT_UNIT_ID = value.UnitId;
					}
					else
					{
						this._MEASUREMENT_UNIT_ID = default(int);
					}
					this.SendPropertyChanged("MeasurementUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Food = default(EntityRef<Food>);
			this._MissingList = default(EntityRef<MissingList>);
			this._MeasurementUnit = default(EntityRef<MeasurementUnit>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MenusInShoppingList")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MenusInShoppingList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MenuId;
		
		private int _UserId;
		
		private EntityRef<Menu> _Menu;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIdChanging(int value);
    partial void OnMenuIdChanged();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    #endregion
		
		public MenusInShoppingList()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int MenuId
		{
			get
			{
				return this._MenuId;
			}
			set
			{
				if ((this._MenuId != value))
				{
					if (this._Menu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIdChanging(value);
					this.SendPropertyChanging();
					this._MenuId = value;
					this.SendPropertyChanged("MenuId");
					this.OnMenuIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Menu_MenusInShoppingList", Storage="_Menu", ThisKey="MenuId", OtherKey="MenuId", IsForeignKey=true)]
		public Menu Menu
		{
			get
			{
				return this._Menu.Entity;
			}
			set
			{
				Menu previousValue = this._Menu.Entity;
				if (((previousValue != value) 
							|| (this._Menu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Menu.Entity = null;
						previousValue.MenusInShoppingLists.Remove(this);
					}
					this._Menu.Entity = value;
					if ((value != null))
					{
						value.MenusInShoppingLists.Add(this);
						this._MenuId = value.MenuId;
					}
					else
					{
						this._MenuId = default(int);
					}
					this.SendPropertyChanged("Menu");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MenusInShoppingList", Storage="_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.MenusInShoppingLists.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.MenusInShoppingLists.Add(this);
						this._UserId = value.UserId;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Menu = default(EntityRef<Menu>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SavedList")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SavedList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NAME;
		
		private System.Nullable<bool> _ACTIVE;
		
		private System.Nullable<bool> _SHOPPING_LIST;
		
		private System.Nullable<int> _CREATED_BY;
		
		private System.Nullable<System.DateTime> _CREATE_DATE;
		
		private EntitySet<SavedListDetail> _SavedListDetails;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnACTIVEChanging(System.Nullable<bool> value);
    partial void OnACTIVEChanged();
    partial void OnSHOPPING_LISTChanging(System.Nullable<bool> value);
    partial void OnSHOPPING_LISTChanged();
    partial void OnCREATED_BYChanging(System.Nullable<int> value);
    partial void OnCREATED_BYChanged();
    partial void OnCREATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCREATE_DATEChanged();
    #endregion
		
		public SavedList()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVE", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<bool> ACTIVE
		{
			get
			{
				return this._ACTIVE;
			}
			set
			{
				if ((this._ACTIVE != value))
				{
					this.OnACTIVEChanging(value);
					this.SendPropertyChanging();
					this._ACTIVE = value;
					this.SendPropertyChanged("ACTIVE");
					this.OnACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHOPPING_LIST", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> SHOPPING_LIST
		{
			get
			{
				return this._SHOPPING_LIST;
			}
			set
			{
				if ((this._SHOPPING_LIST != value))
				{
					this.OnSHOPPING_LISTChanging(value);
					this.SendPropertyChanging();
					this._SHOPPING_LIST = value;
					this.SendPropertyChanged("SHOPPING_LIST");
					this.OnSHOPPING_LISTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_BY", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<int> CREATED_BY
		{
			get
			{
				return this._CREATED_BY;
			}
			set
			{
				if ((this._CREATED_BY != value))
				{
					this.OnCREATED_BYChanging(value);
					this.SendPropertyChanging();
					this._CREATED_BY = value;
					this.SendPropertyChanged("CREATED_BY");
					this.OnCREATED_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="DateTime")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<System.DateTime> CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SavedList_SavedListDetail", Storage="_SavedListDetails", ThisKey="ID", OtherKey="LIST_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<SavedListDetail> SavedListDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._SavedListDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SavedListDetails;
			}
			set
			{
				this._SavedListDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SavedListDetails(SavedListDetail entity)
		{
			this.SendPropertyChanging();
			entity.SavedList = this;
		}
		
		private void detach_SavedListDetails(SavedListDetail entity)
		{
			this.SendPropertyChanging();
			entity.SavedList = null;
		}
		
		private void Initialize()
		{
			this._SavedListDetails = new EntitySet<SavedListDetail>(new Action<SavedListDetail>(this.attach_SavedListDetails), new Action<SavedListDetail>(this.detach_SavedListDetails));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SavedListDetails")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class SavedListDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _LIST_ID;
		
		private int _FOOD_ID;
		
		private int _MEASUREMENT_UNIT_ID;
		
		private decimal _QUANTITY;
		
		private EntityRef<SavedList> _SavedList;
		
		private EntityRef<Food> _Food;
		
		private EntityRef<MeasurementUnit> _MeasurementUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLIST_IDChanging(int value);
    partial void OnLIST_IDChanged();
    partial void OnFOOD_IDChanging(int value);
    partial void OnFOOD_IDChanged();
    partial void OnMEASUREMENT_UNIT_IDChanging(int value);
    partial void OnMEASUREMENT_UNIT_IDChanged();
    partial void OnQUANTITYChanging(decimal value);
    partial void OnQUANTITYChanged();
    #endregion
		
		public SavedListDetail()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIST_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int LIST_ID
		{
			get
			{
				return this._LIST_ID;
			}
			set
			{
				if ((this._LIST_ID != value))
				{
					if (this._SavedList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLIST_IDChanging(value);
					this.SendPropertyChanging();
					this._LIST_ID = value;
					this.SendPropertyChanged("LIST_ID");
					this.OnLIST_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOOD_ID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int FOOD_ID
		{
			get
			{
				return this._FOOD_ID;
			}
			set
			{
				if ((this._FOOD_ID != value))
				{
					if (this._Food.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFOOD_IDChanging(value);
					this.SendPropertyChanging();
					this._FOOD_ID = value;
					this.SendPropertyChanged("FOOD_ID");
					this.OnFOOD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEASUREMENT_UNIT_ID", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int MEASUREMENT_UNIT_ID
		{
			get
			{
				return this._MEASUREMENT_UNIT_ID;
			}
			set
			{
				if ((this._MEASUREMENT_UNIT_ID != value))
				{
					if (this._MeasurementUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMEASUREMENT_UNIT_IDChanging(value);
					this.SendPropertyChanging();
					this._MEASUREMENT_UNIT_ID = value;
					this.SendPropertyChanged("MEASUREMENT_UNIT_ID");
					this.OnMEASUREMENT_UNIT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Decimal(5,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public decimal QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SavedList_SavedListDetail", Storage="_SavedList", ThisKey="LIST_ID", OtherKey="ID", IsForeignKey=true)]
		public SavedList SavedList
		{
			get
			{
				return this._SavedList.Entity;
			}
			set
			{
				SavedList previousValue = this._SavedList.Entity;
				if (((previousValue != value) 
							|| (this._SavedList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SavedList.Entity = null;
						previousValue.SavedListDetails.Remove(this);
					}
					this._SavedList.Entity = value;
					if ((value != null))
					{
						value.SavedListDetails.Add(this);
						this._LIST_ID = value.ID;
					}
					else
					{
						this._LIST_ID = default(int);
					}
					this.SendPropertyChanged("SavedList");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_SavedListDetail", Storage="_Food", ThisKey="FOOD_ID", OtherKey="FoodId", IsForeignKey=true)]
		public Food Food
		{
			get
			{
				return this._Food.Entity;
			}
			set
			{
				Food previousValue = this._Food.Entity;
				if (((previousValue != value) 
							|| (this._Food.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Food.Entity = null;
						previousValue.SavedListDetails.Remove(this);
					}
					this._Food.Entity = value;
					if ((value != null))
					{
						value.SavedListDetails.Add(this);
						this._FOOD_ID = value.FoodId;
					}
					else
					{
						this._FOOD_ID = default(int);
					}
					this.SendPropertyChanged("Food");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeasurementUnit_SavedListDetail", Storage="_MeasurementUnit", ThisKey="MEASUREMENT_UNIT_ID", OtherKey="UnitId", IsForeignKey=true)]
		public MeasurementUnit MeasurementUnit
		{
			get
			{
				return this._MeasurementUnit.Entity;
			}
			set
			{
				MeasurementUnit previousValue = this._MeasurementUnit.Entity;
				if (((previousValue != value) 
							|| (this._MeasurementUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeasurementUnit.Entity = null;
						previousValue.SavedListDetails.Remove(this);
					}
					this._MeasurementUnit.Entity = value;
					if ((value != null))
					{
						value.SavedListDetails.Add(this);
						this._MEASUREMENT_UNIT_ID = value.UnitId;
					}
					else
					{
						this._MEASUREMENT_UNIT_ID = default(int);
					}
					this.SendPropertyChanged("MeasurementUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._SavedList = default(EntityRef<SavedList>);
			this._Food = default(EntityRef<Food>);
			this._MeasurementUnit = default(EntityRef<MeasurementUnit>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ingredients")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class Ingredient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IngredientId;
		
		private int _RecipeId;
		
		private int _FoodId;
		
		private int _MeasurementUnitId;
		
		private decimal _Quantity;
		
		private string _Remarks;
		
		private int _SortOrder;
		
		private EntityRef<Recipe> _Recipe;
		
		private EntityRef<Food> _Food;
		
		private EntityRef<MeasurementUnit> _MeasurementUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIngredientIdChanging(int value);
    partial void OnIngredientIdChanged();
    partial void OnRecipeIdChanging(int value);
    partial void OnRecipeIdChanged();
    partial void OnFoodIdChanging(int value);
    partial void OnFoodIdChanged();
    partial void OnMeasurementUnitIdChanging(int value);
    partial void OnMeasurementUnitIdChanged();
    partial void OnQuantityChanging(decimal value);
    partial void OnQuantityChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    #endregion
		
		public Ingredient()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IngredientId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int IngredientId
		{
			get
			{
				return this._IngredientId;
			}
			set
			{
				if ((this._IngredientId != value))
				{
					this.OnIngredientIdChanging(value);
					this.SendPropertyChanging();
					this._IngredientId = value;
					this.SendPropertyChanged("IngredientId");
					this.OnIngredientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecipeId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int RecipeId
		{
			get
			{
				return this._RecipeId;
			}
			set
			{
				if ((this._RecipeId != value))
				{
					if (this._Recipe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRecipeIdChanging(value);
					this.SendPropertyChanging();
					this._RecipeId = value;
					this.SendPropertyChanged("RecipeId");
					this.OnRecipeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int FoodId
		{
			get
			{
				return this._FoodId;
			}
			set
			{
				if ((this._FoodId != value))
				{
					if (this._Food.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFoodIdChanging(value);
					this.SendPropertyChanging();
					this._FoodId = value;
					this.SendPropertyChanged("FoodId");
					this.OnFoodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeasurementUnitId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public int MeasurementUnitId
		{
			get
			{
				return this._MeasurementUnitId;
			}
			set
			{
				if ((this._MeasurementUnitId != value))
				{
					if (this._MeasurementUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMeasurementUnitIdChanging(value);
					this.SendPropertyChanging();
					this._MeasurementUnitId = value;
					this.SendPropertyChanged("MeasurementUnitId");
					this.OnMeasurementUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public decimal Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="NVarChar(MAX)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Recipe_Ingredient", Storage="_Recipe", ThisKey="RecipeId", OtherKey="RecipeId", IsForeignKey=true)]
		public Recipe Recipe
		{
			get
			{
				return this._Recipe.Entity;
			}
			set
			{
				Recipe previousValue = this._Recipe.Entity;
				if (((previousValue != value) 
							|| (this._Recipe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Recipe.Entity = null;
						previousValue.Ingredients.Remove(this);
					}
					this._Recipe.Entity = value;
					if ((value != null))
					{
						value.Ingredients.Add(this);
						this._RecipeId = value.RecipeId;
					}
					else
					{
						this._RecipeId = default(int);
					}
					this.SendPropertyChanged("Recipe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_Ingredient", Storage="_Food", ThisKey="FoodId", OtherKey="FoodId", IsForeignKey=true)]
		public Food Food
		{
			get
			{
				return this._Food.Entity;
			}
			set
			{
				Food previousValue = this._Food.Entity;
				if (((previousValue != value) 
							|| (this._Food.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Food.Entity = null;
						previousValue.Ingredients.Remove(this);
					}
					this._Food.Entity = value;
					if ((value != null))
					{
						value.Ingredients.Add(this);
						this._FoodId = value.FoodId;
					}
					else
					{
						this._FoodId = default(int);
					}
					this.SendPropertyChanged("Food");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeasurementUnit_Ingredient", Storage="_MeasurementUnit", ThisKey="MeasurementUnitId", OtherKey="UnitId", IsForeignKey=true)]
		public MeasurementUnit MeasurementUnit
		{
			get
			{
				return this._MeasurementUnit.Entity;
			}
			set
			{
				MeasurementUnit previousValue = this._MeasurementUnit.Entity;
				if (((previousValue != value) 
							|| (this._MeasurementUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeasurementUnit.Entity = null;
						previousValue.Ingredients.Remove(this);
					}
					this._MeasurementUnit.Entity = value;
					if ((value != null))
					{
						value.Ingredients.Add(this);
						this._MeasurementUnitId = value.UnitId;
					}
					else
					{
						this._MeasurementUnitId = default(int);
					}
					this.SendPropertyChanged("MeasurementUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Recipe = default(EntityRef<Recipe>);
			this._Food = default(EntityRef<Food>);
			this._MeasurementUnit = default(EntityRef<MeasurementUnit>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeasurementUnitsConverts")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MeasurementUnitsConvert : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ConvertId;
		
		private int _FoodId;
		
		private int _FromUnitId;
		
		private decimal _FromQuantity;
		
		private int _ToUnitId;
		
		private decimal _ToQuantity;
		
		private int _SortOrder;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private EntityRef<Food> _Food;
		
		private EntityRef<MeasurementUnit> _MeasurementUnit;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnConvertIdChanging(int value);
    partial void OnConvertIdChanged();
    partial void OnFoodIdChanging(int value);
    partial void OnFoodIdChanged();
    partial void OnFromUnitIdChanging(int value);
    partial void OnFromUnitIdChanged();
    partial void OnFromQuantityChanging(decimal value);
    partial void OnFromQuantityChanged();
    partial void OnToUnitIdChanging(int value);
    partial void OnToUnitIdChanged();
    partial void OnToQuantityChanging(decimal value);
    partial void OnToQuantityChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    #endregion
		
		public MeasurementUnitsConvert()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConvertId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ConvertId
		{
			get
			{
				return this._ConvertId;
			}
			set
			{
				if ((this._ConvertId != value))
				{
					this.OnConvertIdChanging(value);
					this.SendPropertyChanging();
					this._ConvertId = value;
					this.SendPropertyChanged("ConvertId");
					this.OnConvertIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoodId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int FoodId
		{
			get
			{
				return this._FoodId;
			}
			set
			{
				if ((this._FoodId != value))
				{
					if (this._Food.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFoodIdChanging(value);
					this.SendPropertyChanging();
					this._FoodId = value;
					this.SendPropertyChanged("FoodId");
					this.OnFoodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromUnitId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int FromUnitId
		{
			get
			{
				return this._FromUnitId;
			}
			set
			{
				if ((this._FromUnitId != value))
				{
					this.OnFromUnitIdChanging(value);
					this.SendPropertyChanging();
					this._FromUnitId = value;
					this.SendPropertyChanged("FromUnitId");
					this.OnFromUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromQuantity", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public decimal FromQuantity
		{
			get
			{
				return this._FromQuantity;
			}
			set
			{
				if ((this._FromQuantity != value))
				{
					this.OnFromQuantityChanging(value);
					this.SendPropertyChanging();
					this._FromQuantity = value;
					this.SendPropertyChanged("FromQuantity");
					this.OnFromQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToUnitId", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public int ToUnitId
		{
			get
			{
				return this._ToUnitId;
			}
			set
			{
				if ((this._ToUnitId != value))
				{
					if (this._MeasurementUnit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnToUnitIdChanging(value);
					this.SendPropertyChanging();
					this._ToUnitId = value;
					this.SendPropertyChanged("ToUnitId");
					this.OnToUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToQuantity", DbType="Decimal(18,2) NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public decimal ToQuantity
		{
			get
			{
				return this._ToQuantity;
			}
			set
			{
				if ((this._ToQuantity != value))
				{
					this.OnToQuantityChanging(value);
					this.SendPropertyChanging();
					this._ToQuantity = value;
					this.SendPropertyChanged("ToQuantity");
					this.OnToQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Food_MeasurementUnitsConvert", Storage="_Food", ThisKey="FoodId", OtherKey="FoodId", IsForeignKey=true)]
		public Food Food
		{
			get
			{
				return this._Food.Entity;
			}
			set
			{
				Food previousValue = this._Food.Entity;
				if (((previousValue != value) 
							|| (this._Food.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Food.Entity = null;
						previousValue.MeasurementUnitsConverts.Remove(this);
					}
					this._Food.Entity = value;
					if ((value != null))
					{
						value.MeasurementUnitsConverts.Add(this);
						this._FoodId = value.FoodId;
					}
					else
					{
						this._FoodId = default(int);
					}
					this.SendPropertyChanged("Food");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeasurementUnit_MeasurementUnitsConvert", Storage="_MeasurementUnit", ThisKey="ToUnitId", OtherKey="UnitId", IsForeignKey=true)]
		public MeasurementUnit MeasurementUnit
		{
			get
			{
				return this._MeasurementUnit.Entity;
			}
			set
			{
				MeasurementUnit previousValue = this._MeasurementUnit.Entity;
				if (((previousValue != value) 
							|| (this._MeasurementUnit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MeasurementUnit.Entity = null;
						previousValue.MeasurementUnitsConverts.Remove(this);
					}
					this._MeasurementUnit.Entity = value;
					if ((value != null))
					{
						value.MeasurementUnitsConverts.Add(this);
						this._ToUnitId = value.UnitId;
					}
					else
					{
						this._ToUnitId = default(int);
					}
					this.SendPropertyChanged("MeasurementUnit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			this._Food = default(EntityRef<Food>);
			this._MeasurementUnit = default(EntityRef<MeasurementUnit>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MissingLists")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MissingList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CREATED_BY;
		
		private System.DateTime _CREATE_DATE;
		
		private System.Nullable<bool> _ACTIVE;
		
		private EntitySet<MissingListDetail> _MissingListDetails;
		
		private EntityRef<User> _User;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCREATED_BYChanging(int value);
    partial void OnCREATED_BYChanged();
    partial void OnCREATE_DATEChanging(System.DateTime value);
    partial void OnCREATE_DATEChanged();
    partial void OnACTIVEChanging(System.Nullable<bool> value);
    partial void OnACTIVEChanged();
    #endregion
		
		public MissingList()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATED_BY", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public int CREATED_BY
		{
			get
			{
				return this._CREATED_BY;
			}
			set
			{
				if ((this._CREATED_BY != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCREATED_BYChanging(value);
					this.SendPropertyChanging();
					this._CREATED_BY = value;
					this.SendPropertyChanged("CREATED_BY");
					this.OnCREATED_BYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CREATE_DATE", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.DateTime CREATE_DATE
		{
			get
			{
				return this._CREATE_DATE;
			}
			set
			{
				if ((this._CREATE_DATE != value))
				{
					this.OnCREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CREATE_DATE = value;
					this.SendPropertyChanged("CREATE_DATE");
					this.OnCREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVE", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.Nullable<bool> ACTIVE
		{
			get
			{
				return this._ACTIVE;
			}
			set
			{
				if ((this._ACTIVE != value))
				{
					this.OnACTIVEChanging(value);
					this.SendPropertyChanging();
					this._ACTIVE = value;
					this.SendPropertyChanged("ACTIVE");
					this.OnACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MissingList_MissingListDetail", Storage="_MissingListDetails", ThisKey="ID", OtherKey="LIST_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5, EmitDefaultValue=false)]
		public EntitySet<MissingListDetail> MissingListDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._MissingListDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MissingListDetails;
			}
			set
			{
				this._MissingListDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_MissingList", Storage="_User", ThisKey="CREATED_BY", OtherKey="UserId", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.MissingLists.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.MissingLists.Add(this);
						this._CREATED_BY = value.UserId;
					}
					else
					{
						this._CREATED_BY = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MissingListDetails(MissingListDetail entity)
		{
			this.SendPropertyChanging();
			entity.MissingList = this;
		}
		
		private void detach_MissingListDetails(MissingListDetail entity)
		{
			this.SendPropertyChanging();
			entity.MissingList = null;
		}
		
		private void Initialize()
		{
			this._MissingListDetails = new EntitySet<MissingListDetail>(new Action<MissingListDetail>(this.attach_MissingListDetails), new Action<MissingListDetail>(this.detach_MissingListDetails));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MeasurementUnits")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class MeasurementUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UnitId;
		
		private string _UnitName;
		
		private int _SortOrder;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private System.Nullable<bool> _EnabledInShoppingList;
		
		private EntitySet<MissingListDetail> _MissingListDetails;
		
		private EntitySet<SavedListDetail> _SavedListDetails;
		
		private EntitySet<Ingredient> _Ingredients;
		
		private EntitySet<MeasurementUnitsConvert> _MeasurementUnitsConverts;
		
		private bool serializing;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUnitIdChanging(int value);
    partial void OnUnitIdChanged();
    partial void OnUnitNameChanging(string value);
    partial void OnUnitNameChanged();
    partial void OnSortOrderChanging(int value);
    partial void OnSortOrderChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnEnabledInShoppingListChanging(System.Nullable<bool> value);
    partial void OnEnabledInShoppingListChanged();
    #endregion
		
		public MeasurementUnit()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int UnitId
		{
			get
			{
				return this._UnitId;
			}
			set
			{
				if ((this._UnitId != value))
				{
					this.OnUnitIdChanging(value);
					this.SendPropertyChanging();
					this._UnitId = value;
					this.SendPropertyChanged("UnitId");
					this.OnUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string UnitName
		{
			get
			{
				return this._UnitName;
			}
			set
			{
				if ((this._UnitName != value))
				{
					this.OnUnitNameChanging(value);
					this.SendPropertyChanging();
					this._UnitName = value;
					this.SendPropertyChanged("UnitName");
					this.OnUnitNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public int SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnabledInShoppingList", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<bool> EnabledInShoppingList
		{
			get
			{
				return this._EnabledInShoppingList;
			}
			set
			{
				if ((this._EnabledInShoppingList != value))
				{
					this.OnEnabledInShoppingListChanging(value);
					this.SendPropertyChanging();
					this._EnabledInShoppingList = value;
					this.SendPropertyChanged("EnabledInShoppingList");
					this.OnEnabledInShoppingListChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeasurementUnit_MissingListDetail", Storage="_MissingListDetails", ThisKey="UnitId", OtherKey="MEASUREMENT_UNIT_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7, EmitDefaultValue=false)]
		public EntitySet<MissingListDetail> MissingListDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._MissingListDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MissingListDetails;
			}
			set
			{
				this._MissingListDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeasurementUnit_SavedListDetail", Storage="_SavedListDetails", ThisKey="UnitId", OtherKey="MEASUREMENT_UNIT_ID")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8, EmitDefaultValue=false)]
		public EntitySet<SavedListDetail> SavedListDetails
		{
			get
			{
				if ((this.serializing 
							&& (this._SavedListDetails.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._SavedListDetails;
			}
			set
			{
				this._SavedListDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeasurementUnit_Ingredient", Storage="_Ingredients", ThisKey="UnitId", OtherKey="MeasurementUnitId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9, EmitDefaultValue=false)]
		public EntitySet<Ingredient> Ingredients
		{
			get
			{
				if ((this.serializing 
							&& (this._Ingredients.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._Ingredients;
			}
			set
			{
				this._Ingredients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MeasurementUnit_MeasurementUnitsConvert", Storage="_MeasurementUnitsConverts", ThisKey="UnitId", OtherKey="ToUnitId")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10, EmitDefaultValue=false)]
		public EntitySet<MeasurementUnitsConvert> MeasurementUnitsConverts
		{
			get
			{
				if ((this.serializing 
							&& (this._MeasurementUnitsConverts.HasLoadedOrAssignedValues == false)))
				{
					return null;
				}
				return this._MeasurementUnitsConverts;
			}
			set
			{
				this._MeasurementUnitsConverts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MissingListDetails(MissingListDetail entity)
		{
			this.SendPropertyChanging();
			entity.MeasurementUnit = this;
		}
		
		private void detach_MissingListDetails(MissingListDetail entity)
		{
			this.SendPropertyChanging();
			entity.MeasurementUnit = null;
		}
		
		private void attach_SavedListDetails(SavedListDetail entity)
		{
			this.SendPropertyChanging();
			entity.MeasurementUnit = this;
		}
		
		private void detach_SavedListDetails(SavedListDetail entity)
		{
			this.SendPropertyChanging();
			entity.MeasurementUnit = null;
		}
		
		private void attach_Ingredients(Ingredient entity)
		{
			this.SendPropertyChanging();
			entity.MeasurementUnit = this;
		}
		
		private void detach_Ingredients(Ingredient entity)
		{
			this.SendPropertyChanging();
			entity.MeasurementUnit = null;
		}
		
		private void attach_MeasurementUnitsConverts(MeasurementUnitsConvert entity)
		{
			this.SendPropertyChanging();
			entity.MeasurementUnit = this;
		}
		
		private void detach_MeasurementUnitsConverts(MeasurementUnitsConvert entity)
		{
			this.SendPropertyChanging();
			entity.MeasurementUnit = null;
		}
		
		private void Initialize()
		{
			this._MissingListDetails = new EntitySet<MissingListDetail>(new Action<MissingListDetail>(this.attach_MissingListDetails), new Action<MissingListDetail>(this.detach_MissingListDetails));
			this._SavedListDetails = new EntitySet<SavedListDetail>(new Action<SavedListDetail>(this.attach_SavedListDetails), new Action<SavedListDetail>(this.detach_SavedListDetails));
			this._Ingredients = new EntitySet<Ingredient>(new Action<Ingredient>(this.attach_Ingredients), new Action<Ingredient>(this.detach_Ingredients));
			this._MeasurementUnitsConverts = new EntitySet<MeasurementUnitsConvert>(new Action<MeasurementUnitsConvert>(this.attach_MeasurementUnitsConverts), new Action<MeasurementUnitsConvert>(this.detach_MeasurementUnitsConverts));
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
		
		[global::System.Runtime.Serialization.OnSerializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerializing(StreamingContext context)
		{
			this.serializing = true;
		}
		
		[global::System.Runtime.Serialization.OnSerializedAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnSerialized(StreamingContext context)
		{
			this.serializing = false;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserShoppingList")]
	[global::System.Runtime.Serialization.DataContractAttribute()]
	public partial class UserShoppingList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FOOD_ID;
		
		private string _FOOD_NAME;
		
		private System.Nullable<int> _MEASURMENT_ID;
		
		private string _MEASUREMENT_NAME;
		
		private System.Nullable<decimal> _QUANTITY;
		
		private System.Nullable<int> _CATEGORY_ID;
		
		private string _CATEGORY_NAME;
		
		private int _USER_ID;
		
		private System.Nullable<bool> _ACTIVE;
		
		private System.Nullable<bool> _CAN_DELETE;
		
		private System.Data.Linq.Binary _IMAGE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFOOD_IDChanging(int value);
    partial void OnFOOD_IDChanged();
    partial void OnFOOD_NAMEChanging(string value);
    partial void OnFOOD_NAMEChanged();
    partial void OnMEASURMENT_IDChanging(System.Nullable<int> value);
    partial void OnMEASURMENT_IDChanged();
    partial void OnMEASUREMENT_NAMEChanging(string value);
    partial void OnMEASUREMENT_NAMEChanged();
    partial void OnQUANTITYChanging(System.Nullable<decimal> value);
    partial void OnQUANTITYChanged();
    partial void OnCATEGORY_IDChanging(System.Nullable<int> value);
    partial void OnCATEGORY_IDChanged();
    partial void OnCATEGORY_NAMEChanging(string value);
    partial void OnCATEGORY_NAMEChanged();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnACTIVEChanging(System.Nullable<bool> value);
    partial void OnACTIVEChanged();
    partial void OnCAN_DELETEChanging(System.Nullable<bool> value);
    partial void OnCAN_DELETEChanged();
    partial void OnIMAGEChanging(System.Data.Linq.Binary value);
    partial void OnIMAGEChanged();
    #endregion
		
		public UserShoppingList()
		{
			this.Initialize();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOOD_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=1)]
		public int FOOD_ID
		{
			get
			{
				return this._FOOD_ID;
			}
			set
			{
				if ((this._FOOD_ID != value))
				{
					this.OnFOOD_IDChanging(value);
					this.SendPropertyChanging();
					this._FOOD_ID = value;
					this.SendPropertyChanged("FOOD_ID");
					this.OnFOOD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FOOD_NAME", DbType="NVarChar(200)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=2)]
		public string FOOD_NAME
		{
			get
			{
				return this._FOOD_NAME;
			}
			set
			{
				if ((this._FOOD_NAME != value))
				{
					this.OnFOOD_NAMEChanging(value);
					this.SendPropertyChanging();
					this._FOOD_NAME = value;
					this.SendPropertyChanged("FOOD_NAME");
					this.OnFOOD_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEASURMENT_ID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=3)]
		public System.Nullable<int> MEASURMENT_ID
		{
			get
			{
				return this._MEASURMENT_ID;
			}
			set
			{
				if ((this._MEASURMENT_ID != value))
				{
					this.OnMEASURMENT_IDChanging(value);
					this.SendPropertyChanging();
					this._MEASURMENT_ID = value;
					this.SendPropertyChanged("MEASURMENT_ID");
					this.OnMEASURMENT_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MEASUREMENT_NAME", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=4)]
		public string MEASUREMENT_NAME
		{
			get
			{
				return this._MEASUREMENT_NAME;
			}
			set
			{
				if ((this._MEASUREMENT_NAME != value))
				{
					this.OnMEASUREMENT_NAMEChanging(value);
					this.SendPropertyChanging();
					this._MEASUREMENT_NAME = value;
					this.SendPropertyChanged("MEASUREMENT_NAME");
					this.OnMEASUREMENT_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QUANTITY", DbType="Decimal(10,2)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=5)]
		public System.Nullable<decimal> QUANTITY
		{
			get
			{
				return this._QUANTITY;
			}
			set
			{
				if ((this._QUANTITY != value))
				{
					this.OnQUANTITYChanging(value);
					this.SendPropertyChanging();
					this._QUANTITY = value;
					this.SendPropertyChanged("QUANTITY");
					this.OnQUANTITYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATEGORY_ID", DbType="Int")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=6)]
		public System.Nullable<int> CATEGORY_ID
		{
			get
			{
				return this._CATEGORY_ID;
			}
			set
			{
				if ((this._CATEGORY_ID != value))
				{
					this.OnCATEGORY_IDChanging(value);
					this.SendPropertyChanging();
					this._CATEGORY_ID = value;
					this.SendPropertyChanged("CATEGORY_ID");
					this.OnCATEGORY_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CATEGORY_NAME", DbType="NVarChar(100)")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=7)]
		public string CATEGORY_NAME
		{
			get
			{
				return this._CATEGORY_NAME;
			}
			set
			{
				if ((this._CATEGORY_NAME != value))
				{
					this.OnCATEGORY_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CATEGORY_NAME = value;
					this.SendPropertyChanged("CATEGORY_NAME");
					this.OnCATEGORY_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=8)]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTIVE", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=9)]
		public System.Nullable<bool> ACTIVE
		{
			get
			{
				return this._ACTIVE;
			}
			set
			{
				if ((this._ACTIVE != value))
				{
					this.OnACTIVEChanging(value);
					this.SendPropertyChanging();
					this._ACTIVE = value;
					this.SendPropertyChanged("ACTIVE");
					this.OnACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAN_DELETE", DbType="Bit")]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=10)]
		public System.Nullable<bool> CAN_DELETE
		{
			get
			{
				return this._CAN_DELETE;
			}
			set
			{
				if ((this._CAN_DELETE != value))
				{
					this.OnCAN_DELETEChanging(value);
					this.SendPropertyChanging();
					this._CAN_DELETE = value;
					this.SendPropertyChanged("CAN_DELETE");
					this.OnCAN_DELETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IMAGE", DbType="Image", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		[global::System.Runtime.Serialization.DataMemberAttribute(Order=11)]
		public System.Data.Linq.Binary IMAGE
		{
			get
			{
				return this._IMAGE;
			}
			set
			{
				if ((this._IMAGE != value))
				{
					this.OnIMAGEChanging(value);
					this.SendPropertyChanging();
					this._IMAGE = value;
					this.SendPropertyChanged("IMAGE");
					this.OnIMAGEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void Initialize()
		{
			OnCreated();
		}
		
		[global::System.Runtime.Serialization.OnDeserializingAttribute()]
		[global::System.ComponentModel.EditorBrowsableAttribute(EditorBrowsableState.Never)]
		public void OnDeserializing(StreamingContext context)
		{
			this.Initialize();
		}
	}
}
#pragma warning restore 1591
